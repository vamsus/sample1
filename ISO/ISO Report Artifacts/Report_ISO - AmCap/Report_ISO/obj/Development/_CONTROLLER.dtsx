<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/12/2015 11:21:23 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="EREGAN2"
  DTS:CreatorName="ASICORP\eregan"
  DTS:DTSID="{BD4FD2F9-927E-4D15-9B13-1EFCE5853488}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3025.39"
  DTS:LocaleID="1033"
  DTS:ObjectName="_CONTROLLER"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="378"
  DTS:VersionGUID="{6AC7C585-F04C-42DF-B440-19398B9583F3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_NonTX_Comm_3257]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{47A4976A-EDA2-4025-813D-0479B888FB6F}"
      DTS:ObjectName="FF_CONN_NonTX_Comm_3257">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3257_NonTX Commercial.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DATACALL"
              DTS:DTSID="{14C4B741-0A0F-4FDE-AAA2-ADFDC6527B1D}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_NonTX_Comm_3424]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A86DB311-7552-43B3-8353-35110802CADC}"
      DTS:ObjectName="FF_CONN_NonTX_Comm_3424">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3424_NonTX Commercial.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DATACALL"
              DTS:DTSID="{0C1DA901-8773-4366-A367-09DA26824655}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_NonTX_Resid_3257]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{834117A9-97EF-42E9-B674-39989CA7E9DB}"
      DTS:ObjectName="FF_CONN_NonTX_Resid_3257">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3257_NonTX Residential.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="X"
              DTS:DTSID="{FD8BBBCC-D402-4D92-93D4-3E48406703EB}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_NonTX_Resid_3424]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{FE5BAC7C-538A-448A-A2B2-837F98120C10}"
      DTS:ObjectName="FF_CONN_NonTX_Resid_3424">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3424_NonTX Residential.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="X"
              DTS:DTSID="{E5454236-972F-4FB2-BCE2-A8C7E349C86C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_NonTX_Resid_3488]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{ACFD2735-7D11-44AE-8608-A36C29978EEA}"
      DTS:ObjectName="FF_CONN_NonTX_Resid_3488">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3488_NonTX Residential.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="X"
              DTS:DTSID="{DB93A339-3D27-4064-96AA-A0EC3CD373B0}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_TX_Comm_3424]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EA528BF1-B5BD-48FC-8C16-02A7B877CA79}"
      DTS:ObjectName="FF_CONN_TX_Comm_3424">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3424_TX Commercial.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DATACALL"
              DTS:DTSID="{79012DDC-7B76-48E0-B050-70D7BEF5A3CF}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_TX_Resid_3424]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{7195C7E4-F994-4C18-8FBD-8CB8F62DCA71}"
      DTS:ObjectName="FF_CONN_TX_Resid_3424">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3424_TX Residential.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DATACALL"
              DTS:DTSID="{3E38AF91-1ED6-4EE2-96AB-EFB58DE0371B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[FF_CONN_TX_Resid_3488]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{5DB6543E-E20A-40B3-B528-EA2665503DE5}"
      DTS:ObjectName="FF_CONN_TX_Resid_3488">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\asicorp.org\BAPM\Statistical Reporting\ISO\Submission Text Files\SSIS\TL3488_TX Residential.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="200"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DATACALL"
              DTS:DTSID="{FC260BB1-382E-4176-BAA5-B870A03BEB80}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C778F3BB-1A74-4C79-A24C-D2446B27D90D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LastDayOfQuarter">
      <DTS:VariableValue
        DTS:DataType="7">2/12/2015 11:23:55 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9625C4BE-B6F1-4589-9A8B-C6F01E59BFBD}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportDate1">
      <DTS:VariableValue
        DTS:DataType="7">2/12/2015 11:23:01 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5D6950CF-D5DF-4D19-99D4-36B5CD43E1BE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportDate2">
      <DTS:VariableValue
        DTS:DataType="7">2/12/2015 11:23:10 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C44E9B71-BF30-47D6-9591-2388537D3539}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportDate3_ReserveMonth">
      <DTS:VariableValue
        DTS:DataType="7">2/12/2015 11:23:40 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{31BF632E-D4B1-4190-9A1F-D86ADFADD7D9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strAccountingDate">
      <DTS:VariableValue
        DTS:DataType="8">&amp;4</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SEQ - Load NonTX Commercial Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{47E0C982-D23B-4599-B3A7-D291294AFC3A}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQ - Load NonTX Commercial Data">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{9A704141-4CF9-47A2-AE26-BCBA5F4CB1CD}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT Load DataCall for Commercial Losses"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="DST_FF Comm 3424">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[FF_CONN_NonTX_Comm_3424]"
                      connectionManagerRefId="Package.ConnectionManagers[FF_CONN_NonTX_Comm_3424]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424.Inputs[Flat File Destination Input].Columns[DATACALL]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="DATACALL"
                          externalMetadataColumnId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].Columns[DATACALL]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="200"
                          name="DATACALL" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SRC_OLE ASIDev Commercial Losses"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">-------------------------------------------create Datacall----------------------------------------
------------------------------------------------------------------------------------------------------

SELECT CONCAT([CompanyNumber] --'3424' -- testing purposes  
      ,[TransactionType]
      ,[AccountingDate]
      ,[ISOInceptionDate]
      ,[ISOLossDate]
      ,[StatPlanIndicator]
      ,[StateCode]
      ,[ISOTerritory]
      ,[TypeofPolicyCode]
      ,[ASLOB]
      ,[Subline]
      ,[ClassificationCode]
      ,[StateExceptionIndicatorII]
      ,[StateExceptionIndicator]
      ,[CoverageCode]
      ,[RatingIDCode]
      ,[ConstructionCodeOTBGII]
      ,[ConstructionCodeBGII]
      ,[Deductible]
      ,[OccupancyGroupCode]
      ,[GreenUpgradeIndicator]
      ,[RFU4546]
      ,[MoldDamageCoverageCode]
      ,[RFU4852]
      ,[TerrorismCoverageCode]
      ,[RFU5460]
      ,[ZipTerritoryCode]
      ,[TypeofLossCode]
      ,[ClaimCount]
      ,[RFU7380]
      ,[YearConstruction] -- check not updated yet
      ,[RFU9850]
      ,[Exposure]
      ,[RFU8893]
      ,[BCEGcode]
      ,[LossAmount]
      ,[LossRecordID]
      ,[PremiumRecordID]) AS DATACALL
      ,CompanyNumber
  FROM [ASIDev].[dbo].[ISOReporting_final_Commercial_Losses]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Connections[OleDbConnection]"
                      connectionManagerID="{66467500-4919-415A-BBC7-8E1FF4DABEF2}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLE_CONN_ASIDev]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          length="4000"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          name="DATACALL"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].Columns[CompanyNumber]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].ExternalColumns[CompanyNumber]"
                          length="4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].Columns[CompanyNumber]"
                          name="CompanyNumber"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          name="DATACALL" />
                        <externalMetadataColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output].ExternalColumns[CompanyNumber]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="CompanyNumber" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          name="DATACALL" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[CompanyNumber]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[CompanyNumber]"
                          name="CompanyNumber" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses.Paths[OLE DB Source Output]"
                  endId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424.Inputs[Flat File Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{D542C19F-168A-43D2-AD87-D245C44E802C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT Load DataCall for Commercial Permium"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="DST_FF Commercial 3424">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[FF_CONN_NonTX_Comm_3424]"
                      connectionManagerRefId="Package.ConnectionManagers[FF_CONN_NonTX_Comm_3424]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424.Inputs[Flat File Destination Input].Columns[DATACALL]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="DATACALL"
                          externalMetadataColumnId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].Columns[DATACALL]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="200"
                          name="DATACALL" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SRC_OLE ASIDev Commercial Premium"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT CONCAT( 
	  [COMPANYNUMBER]-- '3424'--   temp for testing purposes 
      ,[TRANSACTIONTYPECODE]
      ,[ACCOUNTINGDATE]
      ,[INCEPTIONDATE]
      ,[EFFECTIVEDATE]
      ,[EXPIRATIONDATE]
      ,[STATECODE]
      ,[TERRITORY]
      ,[TYPEOFPOLICY]
      ,[ASLOB]
      ,[SUBLINE]
      ,[CLASSIFICATIONCODE]
      ,[STATEEXCEPTION2]
      ,[STATEEXCEPTION]
      ,[COVERAGECODE]
      ,[RATINGIDENTIFICATION]
      ,[CONSTRUCTIONCODE_OTBGII]
      ,[CONSTRUCTIONCODE_BGII]
      ,[DEDUCTIBLECODE]
      ,[OCCUPANCYGROUPCODE]
      ,[GREENUPGRADEINDICATOR]
      ,'  ' 
	  ,[MOLDCOVERAGE]
      ,'     ' 
	  ,[TERRORISM]
	  ,'       ' 
      ,[ZIPCODE]
	  ,[YEARCONSTRUCTION] --check is not updated for this change yet
	  ,'    '
      ,[STATPLANINDICATORCODE]
      ,' ' 
	  ,'   ' 
      ,[EXPOSURE]
	  ,'      '
	  ,[BCEG]
      ,[PREMIUM]
	  ,'              ' 
      ,[PREMIUMRECORDID]
	  ) AS DATACALL
	  ,[CompanyNumber]

FROM ASIDev..ISOReporting_final_Commercial_Premium P</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Connections[OleDbConnection]"
                      connectionManagerID="{66467500-4919-415A-BBC7-8E1FF4DABEF2}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLE_CONN_ASIDev]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          length="4000"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          name="DATACALL"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].Columns[CompanyNumber]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[CompanyNumber]"
                          length="4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].Columns[CompanyNumber]"
                          name="CompanyNumber"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          name="DATACALL" />
                        <externalMetadataColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[CompanyNumber]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          name="CompanyNumber" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          name="DATACALL" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[CompanyNumber]"
                          codePage="1252"
                          dataType="str"
                          length="4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[CompanyNumber]"
                          name="CompanyNumber" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium.Paths[OLE DB Source Output]"
                  endId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424.Inputs[Flat File Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Loss table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{07D83E31-1B3E-4442-8A87-5EC5F0AB116B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Load Commercial Loss table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="--------------------------ISO Commercial (NonTX) Losses-------------------------------------&#xA;---------------------------------------------------------------------------------------------&#xA;--paid, reserves, salvage&#xA;--3491 has participation for 051 in FL 09, SC 39, and LA 17&#xA;&#xA;----------------------------------------Set Dates-------------------------------------------&#xA;-------------------------------------------------------------------------------------------&#xA;declare @reportdate1 datetime = ?&#xA;declare @reportdate2 datetime = ?&#xA;declare @reportdate3 datetime = ?&#xA;declare @lastdateofquarter datetime = ?&#xA;--declare @startdate date = ?&#xA;--declare @enddate date = ?&#xA;--declare @reservedate date = ?&#xA;declare @accountingdate varchar(2) = ?&#xA;&#xA; -----------------------------------Clear data from tables---------------------------------------&#xA; ------------------------------------------------------------------------------------------------&#xA;IF OBJECT_ID('tempdb..#data') IS NOT NULL&#xA;&#x9;DROP TABLE #data&#xA;&#xA;------------------------------------Load temp staging table-------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------&#xA;--paid losses&#xA;SELECT Company,&#xA;&#x9;&#x9;LossDate,&#xA;&#x9;&#x9;State,&#xA;&#x9;&#x9;P.PolicyID,&#xA;&#x9;&#x9;County,&#xA;&#x9;&#x9;ZipCode,&#xA;&#x9;&#x9;PlanType,&#xA;&#x9;&#x9;ClaimNumber AS ClaimID,&#xA;&#x9;&#x9;Peril,&#xA;&#x9;&#x9;IIF(Coverage IS NULL, 'A', Coverage) AS Coverage ,&#xA;&#x9;&#x9;LOB,&#xA;&#x9;&#x9;PaidLosses AS Amount,&#xA;                                IIF(CC.Checknum IS NOT NULL, '1', '0') AS CLAIMCOUNT,&#xA;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;'6' AS TransactionType&#xA;&#x9;&#x9;--ReportDate &#x9;   &#xA;INTO #data&#x9;&#xA;FROM ASIDev..LossPaid P &#xA;LEFT JOIN (SELECT PolicyID, MIN(checknum) as checknum FROM ASIdev..LossPaid                ----was counting '1' for each record, rather than for each claim. Each claim can only be counted once. Claim should be counted when first payment is made. &#xA;&#x9;   WHERE PaidLosses &lt;&gt; 0 &#xA;&#x9;   AND CoveragePMT &lt;&gt; 'EXP'&#xA;&#x9;   AND Company NOT LIKE 'PGR%'&#xA;&#x9;   --AND ReportDate IN(@reportDate1, @reportDate2 , @rsrvReportDate) &#xA;&#x9;   AND LOB &lt;&gt; '5.1'&#xA;&#x9;   AND PlanType NOT IN('CPP','CPL','CPO')&#xA;&#x9;   AND STATE &lt;&gt; 'TX' --tx reported separately&#xA;&#x9;   AND (InceptionDate IS NULL OR InceptionDate &gt;= '1/1/2011')&#xA;&#x9;&#x9;GROUP BY PolicyID) CC ON CC.PolicyID = P.PolicyID AND CC.checknum = P.checknum  &#xA;WHERE LOB = '5.1' &#xA;&#x9;AND ReportDate IN (@reportdate1, @reportdate2, @reportdate3) &#xA;&#x9;AND State &lt;&gt; 'TX'&#xA;&#x9;AND PaidLosses IS NOT NULL&#xA;&#x9;  &#xA;&#xA;--reserves   &#xA;INSERT INTO #data&#xA;SELECT Company,&#xA;&#x9;LossDate,&#xA;&#x9;State,&#xA;&#x9;PolicyID,&#xA;&#x9;County,&#xA;&#x9;ZipCode,&#xA;&#x9;PlanType,&#xA;&#x9;ClaimNumber AS ClaimID,&#xA;&#x9;Peril,&#xA;&#x9;Coverage,&#xA;&#x9;LOB,&#xA;&#x9;Reserves AS Amount,&#xA;&#x9;'0' AS ClaimCount,&#xA;&#x9;InceptionDate,&#xA;&#x9;'7' AS TransactionType&#xA;&#x9;--ReportDate&#xA;FROM ASIDev..LossReserves R &#xA;WHERE LOB IN ('5.1', '51') &#xA;&#x9;AND State &lt;&gt; 'TX' &#xA;&#x9;AND Reserves IS NOT NULL &#xA;&#x9;AND ReportDate = @reportdate3&#xA;&#x9;AND Peril &lt;&gt; '*' --added AND Peril &lt;&gt; '*' bc this was a repeat claim that was opened and causes errors. * is for no peril. ok if paid, not if reserve&#xA;&#xA;--salvage&#xA;INSERT INTO #data&#xA;SELECT Company,&#xA;&#x9;[Date of Loss] AS LossDate,&#xA;&#x9;State,&#xA;&#x9;NULL AS PolicyID,&#xA;&#x9;NULL AS County,&#xA;&#x9;NULL AS ZipCode,&#xA;&#x9;PlanID AS PlanType,&#xA;&#x9;[Claim No] AS ClaimID,&#xA;&#x9;NULL AS Peril,&#xA;&#x9;NULL AS Coverage,&#xA;&#x9;LOB,&#xA;&#x9;-1*Amount,&#xA;&#x9;'0' AS ClaimCount,&#xA;&#x9;NULL AS InceptionDate,&#xA;&#x9;'4' AS TransactionType&#xA;&#x9;--[Acctg Date] AS ReportDate&#xA;FROM ASIDev..MCL_tblSalvage S&#xA;WHERE LOB IN ('5.1', 51) &#xA;&#x9;AND State &lt;&gt; 'TX' &#xA;&#x9;AND Amount IS NOT NULL &#xA;&#x9;AND S.[Acctg Date] &gt;= @reportdate1 AND S.[Acctg Date] &lt;= @lastdateofquarter&#xA;&#xA;----------------------------------------update staging records--------------------------------------------&#xA;----------------------------------------------------------------------------------------------------------&#xA;&#xA;------------update salvage info using paid loss table---------------&#xA;UPDATE D&#xA;SET D.PolicyID = L.PolicyID,&#xA;&#x9;D.Peril = L.Peril,&#xA;&#x9;D.Coverage = L.Coverage,&#xA;&#x9;D.County = L.County,&#xA;&#x9;D.InceptionDate = L.InceptionDate,&#xA;&#x9;D.ZipCode = L.ZipCode&#xA;FROM #data D&#xA;JOIN (SELECT PolicyID, Peril, MAX(Coverage) AS Coverage, InceptionDate, County, ZipCode, ClaimNumber &#xA;&#x9;&#x9;FROM ASIDev..LossPaid &#xA;&#x9;&#x9;GROUP BY PolicyID, Peril, InceptionDate, County, ZipCode, ClaimNumber &#xA;&#x9;&#x9;) L ON D.ClaimID = L.ClaimNumber --use max so that only one coverage option&#xA;WHERE D.PolicyID IS NULL&#xA;&#x9;OR D.Peril IS NULL&#xA;&#x9;OR D.County IS NULL&#xA;&#x9;OR D.InceptionDate IS NULL&#xA;&#x9;OR D.Coverage IS NULL&#xA;&#x9;OR D.ZipCode IS NULL&#xA;&#xA;-----------update inceptiondate using claims table----------------&#xA;UPDATE D&#xA;SET D.InceptionDate = C.InceptionDate&#xA;FROM #data D&#xA;JOIN Claims..Claims C ON D.ClaimID = C.ClaimID&#xA;WHERE D.InceptionDate IS NULL&#xA;&#x9;AND C.InceptionDate &lt;&gt; '' --No coverage claims&#xA;&#xA;-----------------------------------------------delete records-----------------------------------------&#xA;-----------------------------------------------------------------------------------------------------&#xA;DELETE FROM #data&#xA;WHERE InceptionDate &lt; '1/1/2011' --NISS&#xA;&#x9;OR InceptionDate IS NULL --can't find match in multiple tables&#xA;&#x9;OR PolicyID IS NULL --claimID not in paid loss table&#xA;&#xA;---------------------------------------------Load final report-----------------------------------------&#xA;----------------------------------------------------------------------------------------------------------&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_Commercial_Losses&#xA;SELECT Company,&#xA;&#x9;LossDate,&#xA;&#x9;State,&#xA;&#x9;PolicyID,&#xA;&#x9;County,&#xA;&#x9;ZipCode,&#xA;&#x9;PlanType,&#xA;&#x9;ClaimID,&#xA;&#x9;Peril,&#xA;&#x9;Coverage,&#xA;&#x9;LOB,&#xA;&#x9;TotalAmount,&#xA;&#x9;InceptionDate,&#xA;&#x9;TransactionType,&#xA;&#x9;Subline,&#xA;&#x9;ASIDEV.[dbo].[Stat_Reporting_Company_Conversion](Company) AS CompanyNumber,&#xA;&#x9;@accountingdate AS AccountingDate,&#xA;&#x9;ASIDev.dbo.Stat_Reporting_Date_Conversion(DATA.InceptionDate, 3) AS ISOInceptionDate,&#xA;&#x9;CASE WHEN CAST(MONTH(DATA.LossDate) AS VARCHAR(2)) = '10' THEN '0'&#xA;&#x9;&#x9;WHEN CAST(MONTH(DATA.LossDate) AS VARCHAR(2)) = '11' THEN '-'&#xA;&#x9;&#x9;WHEN CAST(MONTH(DATA.LossDate) AS VARCHAR(2)) = '12' THEN '&amp;'&#xA;&#x9;&#x9;ELSE CAST(MONTH(DATA.LossDate) AS VARCHAR(2))&#xA;&#x9;&#x9;END + CAST(RIGHT(YEAR(DATA.LossDate),2) AS VARCHAR(2)) + REPLICATE('0',2-LEN(CAST(RIGHT(DAY(DATA.LossDate),2) AS VARCHAR(2))))&#xA;&#x9;    + CAST(RIGHT(DAY(DATA.LossDate),2) AS VARCHAR(2)) AS ISOLossDate, &#xA;&#x9;'   ' AS ISOTerritory,&#xA;&#x9;' ' AS MGAIndicator,&#xA;&#x9;'M' AS 'StatPlanIndicator', --commercial intermediate stat plan&#xA;&#x9;'  ' AS StateCode,&#xA;&#x9;'  ' AS TypeofPolicyCode,&#xA;&#x9;'051' AS ASLOB,&#xA;&#x9;'    ' AS ClassificationCode,&#xA;&#x9;' ' AS StateExceptionIndicatorII,&#xA;&#x9;' ' AS StateExceptionIndicator, &#xA;&#x9;CASE WHEN DATA.Coverage = 'C' THEN '2' ELSE '1' END AS CoverageCode,&#xA;&#x9;'2' AS RatingIDCode, &#x9;   -- need to check this one going forward to make sure the default is correct&#xA;&#x9;' ' AS ConstructionCodeOTBGII,&#xA;&#x9;'  ' AS ConstructionCodeBGII, &#xA;&#x9;'  ' AS Deductible, &#xA;&#x9;' ' AS OccupancyGroupCode,&#xA;&#x9;CASE WHEN Subline = '011' THEN ' ' ELSE '9' END AS GreenUpgradeIndicator,&#xA;&#x9;'  ' AS RFU4546,&#xA;&#x9;'1' AS MoldDamageCoverageCode,&#xA;&#x9;'     ' AS DeductibleAmount, &#xA;&#x9;' ' AS TerrorismCoverageCode,&#xA;    '99' AS TransactionIdentifier,&#xA;&#x9;'1' AS OrdinanceLawID, --this needs to be coded?&#xA;&#x9;' ' AS ISOUse,&#xA;&#x9;CONVERT(VARCHAR,ZipCode) + REPLICATE('0',9-LEN(ZipCode)) AS ZipTerritoryCode,&#x9;&#xA;&#x9;CASE WHEN REPLACE(Peril,' ','') IN('E','F') THEN '01'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('WI') THEN '42'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('H') THEN '72'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('VMM') THEN '05'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('WA') THEN '06'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('TH') THEN '05'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('SH') THEN '73'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('COL') THEN '74'&#xA;&#x9;&#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('EXP') THEN '03'&#xA;&#x9;   &#x9;&#x9;  ELSE '09'&#xA;&#x9;   &#x9; END AS TypeofLossCode,&#xA;&#x9;ClaimCount, &#xA;&#x9;'    ' AS SIC, -- standard industrial classification&#xA;&#x9;'  ' AS YearConstruction,&#xA;&#x9;'9' AS CoInsuranceCode, --can't find coverage 66 or 81 to pull in&#xA;&#x9;'       ' AS Exposure,&#xA;&#x9;'     ' AS 'RFU4852',&#xA;&#x9;'     ' AS 'RFU7380',&#xA;&#x9;' ' AS 'RFU9850',&#xA;&#x9;'      ' AS 'RFU8893',&#xA;&#x9;'       ' AS 'RFU5460',&#xA;&#x9;'  ' AS BCEGcode, &#xA;&#x9;ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(TotalAmount,0)) AS LossAmount,&#xA;&#x9;LEFT(ClaimID,14) AS 'LossRecordID',&#xA;&#x9;CONVERT(VARCHAR,DATA.PolicyID) + REPLICATE(' ',23-LEN(DATA.PolicyID)) AS 'PremiumRecordID'&#xA;--INTO ASIDev.dbo.ISOReporting_final_Commercial_Losses&#xA;FROM (SELECT Company,&#xA;&#x9;&#x9;LossDate,&#xA;&#x9;&#x9;State,&#xA;&#x9;&#x9;PolicyID,&#xA;&#x9;&#x9;County,&#xA;&#x9;&#x9;ZipCode,&#xA;&#x9;&#x9;PlanType,&#xA;&#x9;&#x9;ClaimID,&#xA;&#x9;&#x9;Peril,&#xA;&#x9;&#x9;Coverage,&#xA;&#x9;&#x9;LOB,&#xA;&#x9;&#x9;SUM(Amount) AS TotalAmount,&#xA;&#x9;&#x9;ClaimCount,&#xA;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;TransactionType,&#xA;&#x9;&#x9;--ReportDate,&#x9;&#x9;&#xA;&#x9;&#x9;CASE WHEN REPLACE(Peril,' ','') IN('E','F','VMM','VMM ','TH','WA', 'EXP', 'BLA', '*') THEN '015'&#xA;&#x9;&#x9;&#x9;&#x9;WHEN REPLACE(Peril,' ','') IN('WI','H', 'FRZ', 'VEH','SH','O','COL', 'FOB', 'CD') THEN '027'&#xA;&#x9;&#x9;&#x9;&#x9;ELSE 'NEW PERILS'&#xA;&#x9;&#x9;END AS 'Subline'&#xA;&#x9;FROM #data D&#xA;&#x9;GROUP BY  Company,LossDate,State,PolicyID,County,ZipCode,PlanType,ClaimID,Peril,Coverage,LOB,InceptionDate, TransactionType, ClaimCount--, ReportDate&#xA;&#x9;HAVING SUM(Amount) &lt;&gt; 0 &#xA;&#x9;) DATA &#xA;&#xA;&#xA;-------------------------------------------------drop temp------------------------------------&#xA;---------------------------------------------------------------------------------------------&#xA;IF OBJECT_ID('tempdb..#data') IS NOT NULL&#xA;&#x9;DROP TABLE #data&#xA;&#xA;&#xA;---------------------------------------------update final records--------------------------------&#xA;-----------------------------------------------------------------------------------------------&#xA;&#xA;----Update Territory-----------------------------  &#xA;UPDATE Loss&#xA;SET Loss.ISOTerritory = IIF(Terr.ISO_Territory IS NULL, TerrCounty.ISO_Territory ,Terr.ISO_Territory), &#x9;--try first to match with city.  if outside city, then just county match&#xA;&#x9;Loss.StateCode = ASIDev.DBO.Stat_Reporting_State_Conversion(Loss.State)&#xA;FROM ASIDev..ISOReporting_final_Commercial_Losses Loss&#xA;JOIN ASI1..PLLocation L ON Loss.PolicyID = L.PolicyID AND Loss.InceptionDate = L.InceptionDate &#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NOT NULL) Terr ON L.locState = Terr.State AND L.locCounty = Terr.County AND L.locCity = Terr.City&#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NULL) TerrCounty ON L.locState = TerrCounty.State AND L.locCounty = TerrCounty.County&#xA;&#xA;----Update Building Info------------------------------------&#xA;UPDATE Loss&#xA;SET Loss.TypeofPolicyCode = CASE WHEN PlanType = 'CPP' THEN '72'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN PlanType = 'CPO' THEN '73'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '00' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   END,&#xA;&#x9;Loss.YearConstruction = LU.Isocode,&#xA;&#x9;Loss.BCEGcode = CASE WHEN Subline = '011' THEN '  '&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;ELSE &#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN BCEG IN( '0', 'K', 'C', 'D', '  ' , NULL) THEN '99' -- blank is not picking so manually put in 99&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;ELSE REPLACE(REPLICATE('0',2-LEN(BCEG)) + CONVERT(VARCHAR,BCEG),' ','') &#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;END, &#xA;&#x9;Loss.ClassificationCode =  &#x9;CASE WHEN Building_Info.[No of Buildings] &lt;= 10 AND Building_Info.BldgType = 'Condo' THEN '0331'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Condo' THEN '0332'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Condo' THEN '0333'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 10 AND Building_Info.BldgType = 'Apt' THEN '0311'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Apt' THEN '0312'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Apt' THEN '0313'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '0702' --office building&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END,&#xA;&#x9;Loss.ConstructionCodeOTBGII = CASE WHEN Subline = '015' THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ConstructionType = 'Masonry' THEN '2'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ConstructionType = 'Fire Resistive' THEN '6'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE ' ' --027&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END,&#xA;&#x9;Loss.ConstructionCodeBGII = CASE WHEN Subline = '015' THEN PROTECTIONCLASS&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN [No of Stories] &lt;= 6 THEN&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Masonry' THEN '21'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Fire Resistive' THEN '61'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Masonry' THEN '22'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Fire Resistive' THEN '62'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;FROM ASIDev..ISOReporting_final_Commercial_Losses Loss&#xA;--building info: # stories, # buildings, bldg type, construction type&#xA;JOIN (SELECT PolicyID, &#xA;&#x9;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;&#x9;MAX(NoStories) AS 'No of Stories',&#xA;&#x9;&#x9;&#x9;MAX(BldgNumber) AS 'No of Buildings',&#x9;&#x9;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;MAX(CASE WHEN Description LIKE '%Condo%' THEN 'Condo' &#xA;&#x9;&#x9;&#x9;&#x9;WHEN Description LIKE '%office%' THEN 'Office' &#xA;&#x9;&#x9;&#x9;&#x9;ELSE 'Apt' END) AS 'BldgType',&#xA;&#x9;&#x9;&#x9;MAX(ConstructionType) AS 'ConstructionType',&#xA;&#x9;&#x9;&#x9;MAX(YearConstruction) AS 'YearConstruction'&#xA;&#x9;&#x9;&#x9;FROM ASI1..PLBuildingInfo GROUP BY PolicyID, InceptionDate) Building_Info ON Building_Info.PolicyID = Loss.PolicyID AND Building_Info.InceptionDate = Loss.InceptionDate&#xA;--Sprinklers&#xA;LEFT JOIN (  SELECT PolicyID, InceptionDate&#xA;&#x9;&#x9;&#x9;  FROM ASI1..PLCoveragePkg&#xA;&#x9;&#x9;&#x9;  WHERE EndForm = '64') Sprinkler ON Loss.PolicyID = Sprinkler.PolicyID AND Loss.InceptionDate = Sprinkler.InceptionDate &#xA;--Protection Class and BCEG&#xA;LEFT JOIN (SELECT PolicyID, InceptionDate, MAX(ProtectionClass) AS ProtectionClass, MAX(BCEG) AS BCEG FROM ASI1..PLMaster GROUP BY PolicyID, InceptionDate) PLM ON PLM.PolicyID = Loss.PolicyID AND PLM.InceptionDate = Loss.InceptionDate &#xA;--Year Construction&#xA;LEFT JOIN ASIDev..ISOReporting_LU_YearConstruction LU  ON LU.YearConstruction = Building_Info.YearConstruction&#xA;&#xA;&#xA;----Update Terrorism-------------------------------&#xA;UPDATE Loss&#xA;SET Loss.TerrorismCoverageCode = CASE WHEN Terrorism.CoverageDescr = 'Terrorism' THEN '4' ELSE '2' END&#xA;FROM ASIDev..ISOReporting_final_Commercial_Losses Loss&#xA;--Terrorism&#xA;LEFT JOIN (SELECT CP.PolicyID,CP.InceptionDate,CoverageDescr FROM ASI1.dbo.PLCoveragePkg CP&#xA;&#x9;&#x9;   INNER JOIN (SELECT PolicyID,InceptionDate, MAX(PostDate) AS 'PD' FROM ASI1.dbo.PLCoveragePkg WHERE EndForm = '96A' &#xA;&#x9;&#x9;   GROUP BY PolicyID,InceptionDate) MAXPD ON MAXPD.PolicyID = CP.PolicyID AND MAXPD.InceptionDate = CP.InceptionDate AND &#xA;&#x9;&#x9;   MAXPD.PD = CP.PostDate WHERE EndForm = '96A' GROUP BY CP.PolicyID,CP.InceptionDate,CoverageDescr) Terrorism ON&#xA;&#x9;&#x9;   Terrorism.PolicyID = Loss.PolicyID AND Terrorism.InceptionDate = Loss.InceptionDate&#xA;&#xA;----Update Deductible &#xA;UPDATE Loss&#xA;SET Loss.Deductible = CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 1000 THEN '7 '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 2500 THEN '8 '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 5000 THEN '9 '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 10000 THEN 'A '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 25000 THEN 'B '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 50000 THEN 'C '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '9 '&#x9;&#x9;&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;END,&#xA;&#x9;Loss.DeductibleAmount = CONVERT( VARCHAR,REPLICATE('0',5-LEN(CONVERT(INT,ROUND(NHRdeductible,0))))) + CONVERT(VARCHAR,CONVERT(INT,ROUND(NHRdeductible,0)))&#xA;FROM ASIDev..ISOReporting_final_Commercial_Losses Loss&#xA;JOIN (SELECT PolicyID, InceptionDate, MAX(NHRdeductible) AS NHRdeductible FROM ASI1..PLMaster GROUP BY PolicyID, InceptionDate) PLM ON PLM.PolicyID = Loss.PolicyID AND PLM.InceptionDate = Loss.InceptionDate &#xA;&#xA;----Update Exposure---------------------------------&#xA;UPDATE Loss&#xA;SET Loss.Exposure = REPLICATE('0',7-LEN(Exposure.Coverage)) + CONVERT(VARCHAR,Exposure.Coverage)&#xA;FROM ASIDev..ISOReporting_final_Commercial_Losses Loss&#xA;--Exposure (coverage) --SHOULD THIS ALSO GRAB 'CONTENTS COVERAGE'? &#xA;JOIN (SELECT CP.PolicyID, CP.InceptionDate ,REPLACE(ROUND(SUM(Limit)/1000,0),'.00','') AS 'Coverage' ,CoverageDescr FROM ASI1.dbo.PLCoveragePkg CP&#xA;&#x9;&#x9;   INNER JOIN (SELECT PolicyID,InceptionDate, MAX(PostDate) AS 'PD' FROM ASI1.dbo.PLCoveragePkg WHERE EndForm = '63' &#xA;&#x9;&#x9;   GROUP BY PolicyID,InceptionDate) MAXPD ON MAXPD.PolicyID = CP.PolicyID AND MAXPD.InceptionDate = CP.InceptionDate AND &#xA;&#x9;&#x9;   MAXPD.PD = CP.PostDate&#xA;&#x9;&#x9;   WHERE CoverageDescr IN('Building Coverage') GROUP BY CP.PolicyID ,CP.InceptionDate ,PostDate ,CoverageDescr) Exposure ON&#xA;&#x9;&#x9;   Exposure.PolicyID = Loss.PolicyID AND Exposure.InceptionDate = Loss.InceptionDate&#xA;&#xA;&#xA;----Update State Exceptions------------------------&#xA; UPDATE Loss&#xA;SET Loss.StateExceptionIndicatorII =  CASE WHEN Loss.InceptionDate &gt;= '6/1/2012' AND State = 'FL' AND Subline = '027' THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CASE WHEN Peril = 'SH' THEN '2' ELSE '1' END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE ' ' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; END ,&#xA;&#x9;Loss.StateExceptionIndicator = CASE WHEN State IN('FL','SC') THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN Subline = '027' THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN WindMitCredits =  0 THEN 'Z'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 5 THEN'Y'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 10 THEN'X'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits&lt;= 15 THEN'W'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 20 THEN'V'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 25 THEN'U'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 30 THEN'T'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 35 THEN'S'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 40 THEN'R'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 45 THEN'Q'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 50 THEN'P'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 55 THEN'O'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 60 THEN'N'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 65 THEN'M'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 70 THEN'L'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 75 THEN'K'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 80 THEN'J'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 85 THEN'I'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 90 THEN'H'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &gt; 90 THEN'G'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '7'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE ' ' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   ELSE ' '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   END &#xA;FROM ASIDev..ISOReporting_final_Commercial_Losses Loss&#xA;--state exception indicator&#xA;LEFT JOIN (SELECT CP.PolicyID,CP.InceptionDate, ROUND(twoPremAmt * 100,0) AS 'WindMitCredits' &#xA;&#x9;&#x9;   FROM ASI1.dbo.PLCoveragePkg CP&#xA;&#x9;&#x9;   INNER JOIN (SELECT PolicyID,InceptionDate, MAX(PostDate) AS 'PD' FROM ASI1.dbo.PLCoveragePkg WHERE EndForm = '63' &#xA;&#x9;&#x9;   GROUP BY PolicyID,InceptionDate) MAXPD ON MAXPD.PolicyID = CP.PolicyID AND MAXPD.InceptionDate = CP.InceptionDate AND &#xA;&#x9;&#x9;   MAXPD.PD = CP.PostDate WHERE EndForm = '63' GROUP BY CP.PolicyID,CP.InceptionDate,twoPremAmt) StateExceptionIndicator ON &#xA;&#x9;&#x9;   StateExceptionIndicator.PolicyID = Loss.PolicyID AND StateExceptionIndicator.InceptionDate = Loss.InceptionDate&#xA;&#xA;&#xA;-------Update YEARCONSTRUCTION-----------------------&#xA;UPDATE Loss    ----Update to blank when given conditions are true. Below is based on E752.&#xA;SET YEARCONSTRUCTION = '  '&#xA;FROM ASIdev..ISOReporting_final_Commercial_Losses Loss&#xA;WHERE (SUBLINE = '015' OR SUBLINE = '027') &#xA;AND InceptionDate &lt; '5/1/2015'&#xA;--AND GREENUPGRADEINDICATOR NOT IN ('8')&#xA;--AND TYPEOFPOLICY NOT IN ('20', '2A', '80', '8A')&#xA;--AND LEFT(ClassificationCode,1) NOT IN ('7', '8', '9')&#xA;--AND COVERAGECODE NOT IN ('C', 'D', 'E', 'F', '8')&#xA;--AND CLASSIFICATIONCODE NOT IN ('1160', '1165', '1170', '1185', '1190', '1200', '0833')&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ReportDate1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ReportDate2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ReportDate3_ReserveMonth"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::LastDayOfQuarter"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::strAccountingDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Premium tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{20b63aae-1965-4100-b5c5-b1bf2f4e5d4b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Load Commercial Premium tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="----------------ISO Commercial Premium (NonTX)--------------------------------------&#xA;-----------------------------------------------------------------------------------&#xA;--premium&#xA;--3491 has participation for 051 in FL, SC, and LA&#xA;&#xA;-------------------------------------set dates-----------------------------------&#xA;------------------------------------------------------------------------------------&#xA;&#xA;declare @reportdate1 datetime = ?&#xA;declare @reportdate2 datetime = ?&#xA;declare @reportdate3 datetime = ?&#xA;declare @lastdateofquarter datetime = ?&#xA;--declare @startdate date = ?&#xA;--declare @enddate date = ?&#xA;&#xA;-----------------------------load staging table for commercial---------------------------&#xA;------------------------------------------------------------------------------------------&#xA;INSERT INTO ASIDev.dbo.ISOReporting_staging_Commercial_Premium&#xA;SELECT PLM.PolicyID&#xA;&#x9;,PLM.PostDate&#x9;&#xA;&#x9;,PLM.InceptionDate AS IncDate&#xA;&#x9;,DATEADD(yyyy,1,PLM.InceptionDate) AS ExpDate&#xA;&#x9;,PLM.EffectiveDate AS EffDate&#xA;&#x9;,PLM.AccountingDate AS AccDate&#xA;&#x9;,PLM.AgentID&#xA;&#x9;,LUC.Company_WP&#xA;&#x9;,PLM.PlanID&#xA;&#x9;,PLM.TransactionType&#xA;&#x9;,PLM.TransactionDescr&#xA;&#x9;,PLM.HURPremAmt&#xA;&#x9;,CAST('0' AS money) AS NonHurrPrem &#xA;&#x9;,PLM.TrxWrapPremAmt&#xA;&#x9;,PLM.LiabilityPremAmt&#xA;&#x9;,PLM.NHRdeductible&#xA;&#x9;,PLM.HURdeductible&#xA;&#x9;,PLM.MGAFee&#xA;&#x9;,PLM.InspectionFee&#xA;&#x9;,PLM.EMPAFee&#xA;&#x9;,PLM.FIGAFee&#xA;&#x9;,PLM.MiscFees&#xA;&#x9;,PLM.FCSFee&#xA;&#x9;,PLM.FHCFFee&#xA;&#x9;,PLM.CitizensFee&#xA;&#x9;,PLM.CitizensEAFee&#xA;&#x9;,PLM.TrxPremAmt&#xA;&#x9;,PLM.PremLessFees&#xA;&#x9;,L.locCounty&#xA;&#x9;,L.locZipCode &#xA;&#x9;,PLM.State&#xA;&#x9;,Building_Info.ConstructionType&#xA;&#x9;,Building_Info.[No of Stories] as NumStories&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Company_Conversion(LUC.Company_WP) COMPANYNUMBER&#xA;&#x9;,'1' AS TRANSACTIONTYPECODE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(PLM.AccountingDate, 2) AS ACCOUNTINGDATE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(PLM.InceptionDate, 3) AS INCEPTIONDATE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(PLM.EffectiveDate, 3) AS EFFECTIVEDATE --should this be inceptiondate?&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(DATEADD(yyyy,1,PLM.InceptionDate), 3) AS EXPIRATIONDATE &#xA;&#x9;,ASIDev.DBO.Stat_Reporting_State_Conversion(PLM.State) AS STATECODE&#xA;&#x9;--,Terr.ISO_Territory AS TERRITORY&#x9;&#xA;&#x9;,IIF(Terr.ISO_Territory IS NULL, TerrCounty.ISO_Territory ,Terr.ISO_Territory) AS TERRITORY&#x9;--try first to match with city.  if outside city, then just county match&#xA;&#x9;,CASE PLM.PlanID WHEN 'CPP' THEN '72' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN 'CPO' THEN '73'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE '00' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; END AS TYPEOFPOLICY&#xA;&#x9;,'051' AS ASLOB &#xA;&#x9;,CASE WHEN Building_Info.[No of Buildings] &lt;= 10 AND Building_Info.BldgType = 'Condo' THEN '0331'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Condo' THEN '0332'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Condo' THEN '0333'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings]&lt;= 10 AND Building_Info.BldgType = 'Apt' THEN '0311'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Apt' THEN '0312'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Apt' THEN '0313'&#xA;&#x9;&#x9;&#x9;ELSE '0702' --office building&#xA;&#x9;&#x9;&#x9;END AS CLASSIFICATIONCODE &#xA;&#x9;,IIF(PLM.State = 'FL' AND PLM.InceptionDate &gt;= '6/1/2012', '1', ' ') AS STATEEXCEPTION2&#xA;&#x9;,PLM.ProtectionClass&#xA;&#x9;,' ' AS OCCUPANCYGROUPCODE --BLANK FOR SUBLINES 015 &amp; 027&#xA;&#x9;,'9' AS GREENUPGRADEINDICATOR&#xA;&#x9;,'1' AS MOLDCOVERAGE&#xA;&#x9;,'2' AS TERRORISM&#xA;&#x9;,L.locZipCode + '0000' AS ZIPCODE&#xA;&#x9;,LU.ISOCode AS YEARCONSTRUCTION&#xA;&#x9;,'M' AS STATPLANINDICATORCODE&#xA;&#x9;,' ' AS BUSOFFPREMISEPCT --BLANK FOR SUBLINES 015 &amp; 027&#xA;&#x9;,CASE PLM.BCEG&#xA;&#x9;&#x9;&#x9;WHEN '1' THEN '01' &#xA;&#x9;&#x9;&#x9;WHEN '2' THEN '02'&#xA;&#x9;&#x9;&#x9;WHEN '3' THEN '03'&#xA;&#x9;&#x9;&#x9;WHEN '4' THEN '04'&#xA;&#x9;&#x9;&#x9;WHEN '5' THEN '05'&#xA;&#x9;&#x9;&#x9;WHEN '6' THEN '06'&#xA;&#x9;&#x9;&#x9;WHEN '7' THEN '07'&#xA;&#x9;&#x9;&#x9;WHEN '8' THEN '08'&#xA;&#x9;&#x9;&#x9;WHEN '9' THEN '09' &#xA;&#x9;&#x9;&#x9;WHEN '10' THEN '10'&#xA;&#x9;&#x9;&#x9;ELSE '99' --ungraded, none, blank, letters&#xA;&#x9;&#x9;&#x9;END AS BCEG&#xA;&#x9;,PLM.PolicyID + REPLICATE(' ',33-LEN(PLM.PolicyID)) AS PREMIUMRECORDID&#xA;&#x9;&#xA;&#x9;--INTO ASIDev.dbo.ISOReporting_staging_Commercial_Premium&#xA;FROM ASI1..PLMaster PLM&#xA;JOIN ASI1..PLLocation L ON PLM.PolicyID = L.PolicyID AND PLM.InceptionDate = L.InceptionDate AND PLM.PostDate = L.PostDate&#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NOT NULL) Terr ON PLM.State = Terr.State AND L.locCounty = Terr.County AND L.locCity = Terr.City&#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NULL) TerrCounty ON PLM.State = TerrCounty.State AND L.locCounty = TerrCounty.County&#xA;--JOIN ASIdev..isoreporting_lu_stateconversion ST ON PLM.state = ST.State&#xA;JOIN EOM..LUCompany LUC ON PLM.CompanyID = LUC.Company_PLMaster&#xA;JOIN (SELECT PolicyID, &#xA;&#x9;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;&#x9;MAX(NoStories) AS 'No of Stories',&#xA;&#x9;&#x9;&#x9;MAX(BldgNumber) AS 'No of Buildings',&#x9;&#xA;&#x9;&#x9;&#x9;MAX( YearConstruction) AS YearConstruction,&#x9;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;MAX(CASE WHEN Description LIKE '%Condo%' THEN 'Condo' &#xA;&#x9;&#x9;&#x9;&#x9;WHEN Description LIKE '%office%' THEN 'Office' &#xA;&#x9;&#x9;&#x9;&#x9;ELSE 'Apt' END) AS 'BldgType',&#xA;&#x9;&#x9;&#x9;MAX(ConstructionType) AS 'ConstructionType'&#xA;&#x9;&#x9;&#x9;FROM ASI1..PLBuildingInfo GROUP BY PolicyID, InceptionDate&#xA;&#x9;&#x9;&#x9;) Building_Info ON Building_Info.PolicyID = PLM.PolicyID AND Building_Info.InceptionDate = PLM.InceptionDate&#xA;JOIN ASIDev..ISOReporting_LU_YearConstruction LU  ON LU.YearConstruction = Building_Info.YearConstruction&#xA;&#xA;WHERE PLM.AccountingDate &gt;= @reportdate1 AND PLM.AccountingDate &lt;= @lastdateofquarter&#xA;&#x9;AND PLM.AgentID &lt;&gt; 'MP1111' &#xA;&#x9;AND PLM.InceptionDate &gt;= '1/1/2011'&#xA;&#x9;AND PLM.PlanID IN ('CPP', 'CPO')&#xA;&#x9;AND (PLM.TrxPremAmt &lt;&gt; 0 OR PLM.HURPremAmt &lt;&gt; 0)&#xA;&#x9;AND PLM.State &lt;&gt; 'TX'&#xA;&#x9;AND PLM.PolicyId NOT LIKE 'Q%'&#xA; ORDER BY PLM.PolicyID&#xA;&#xA;-------------------------------------update staging records------------------------------------------------&#xA;------------------------------------------------------------------------------------------------------------&#xA;&#xA;--------update State Exception Indicator2 - Sinkhole Coverage&#xA;UPDATE WP&#xA;SET WP.STATEEXCEPTION2 = '2'&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT PolicyID, InceptionDate, PostDate&#xA;&#x9;&#x9;FROM ASI1..PLCoveragePkg&#xA;&#x9;&#x9;WHERE EndForm = '35B'&#xA;&#x9;&#x9;GROUP BY PolicyID, InceptionDate, PostDate&#xA;&#x9;&#x9;) StateExc2 ON WP.PolicyID = StateExc2.PolicyID AND WP.IncDate = StateExc2.Inceptiondate AND WP.PostDate = StateExc2.PostDate&#xA;WHERE WP.State = 'FL' AND WP.IncDate &gt;= '6/1/2012'&#xA;&#xA;--------updateNonHurricanePremium&#xA;UPDATE WP&#xA;SET WP.NonHurrPrem = ROUND(WP.PremLessFees - WP.HURPremAmt - WP.TrxWrapPremAmt - WP.LiabilityPremAmt,0)&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;&#xA;&#xA;-----------update Terrorism Code&#xA;--non-certified never covered. 2 is base. 4 is endorsement for certified acts&#xA;UPDATE WP&#xA;SET WP.TERRORISM = '4'&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;&#x9;WHERE EndForm = '96A'&#xA;&#x9;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;    ) Terrorism ON WP.PolicyID = Terrorism.PolicyID AND WP.IncDate = Terrorism.Inceptiondate AND WP.PostDate = Terrorism.PostDate&#xA;&#xA;&#xA;------update ContentsPremiumGroupIandII&#xA;--Fixes premium amount to be only for building when called later&#xA;UPDATE WP&#xA;SET WP.NonHurrPrem = WP.NonHurrPrem - Contents.[Group I]&#xA;&#x9; ,WP.TrxWrapPremAmt = WP.TrxWrapPremAmt - Contents.[Group II]&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;&#x9;,[InceptionDate]&#xA;&#x9;&#x9;&#x9;,PostDate&#xA;&#x9;&#x9;&#x9;,sum(onePremAmt) AS 'Group I'&#xA;&#x9;&#x9;&#x9;,sum(twoPremAmt + threePremAmt) AS 'Group II'&#xA;&#x9;&#x9;&#x9;,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr IN('Contents Premium')&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;&#x9;,[InceptionDate]&#xA;&#x9;&#x9;&#x9;,PostDate&#xA;&#x9;&#x9;&#x9;,CoverageDescr&#xA;&#x9;&#x9;&#x9;) Contents ON WP.PolicyID = Contents.PolicyID AND WP.IncDate = Contents.Inceptiondate AND WP.PostDate = Contents.PostDate&#xA;&#xA;-------------------------------------------load final report-----------------------------------------&#xA;-----------------------------------------------------------------------------------------------------&#xA;&#xA;-------BUILDINGCOVERAGEGROUP1&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'015' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'1' AS COVERAGECODE&#xA;&#x9;,'1' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,WP.PROTECTIONCLASS AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,WP.GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.STATPLANINDICATORCODE&#xA;&#x9;,'  ' AS BCEG --BLANK IF 015&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(WP.NonHurrPrem &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(WP.NonHurrPrem,0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,WP.NonHurrPrem AS PremAmt&#xA;&#x9;,'BuildingCoverageGroup1' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA; &#xA;&#xA;------------BUILDINGCOVERAGEGROUP2&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'027' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,WP.STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'1' AS COVERAGECODE&#xA;&#x9;,'1' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,'  ' AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,WP.GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.STATPLANINDICATORCODE&#xA;&#x9;,WP.BCEG --BLANK IF 015&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(WP.HURPremAmt + WP.TrxWrapPremAmt &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(WP.HURPremAmt + WP.TrxWrapPremAmt,0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,WP.HURPremAmt + WP.TrxWrapPremAmt AS PremAmt&#xA;&#x9;,'BuildingCoverageGroup2' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA; &#xA;&#xA;&#xA;----CONTENTSCOVERAGEGROUP1&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'015' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'2' AS COVERAGECODE&#xA;&#x9;,'1' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,WP.PROTECTIONCLASS AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,WP.GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.STATPLANINDICATORCODE&#xA;&#x9;,'  ' AS BCEG --BLANK IF 015&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(ContentsPremium.[Group I] &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(ContentsPremium.[Group I],0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,ContentsPremium.[Group I] AS PremAmt&#xA;&#x9;,'ContentsCoverageGroup1' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(onePremAmt) AS 'Group I'&#xA;&#x9;&#x9;  ,sum(twoPremAmt + threePremAmt) AS 'Group II'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Premium'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;&#x9;  ) ContentsPremium ON WP.PolicyID = ContentsPremium.PolicyID AND WP.IncDate = ContentsPremium.Inceptiondate AND WP.PostDate = ContentsPremium.PostDate&#xA;WHERE ContentsPremium.[Group I] &lt;&gt; 0&#xA;&#xA;&#xA;----------------CONTENTSCOVERAGEGROUP2&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'027' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,WP.STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'2' AS COVERAGECODE&#xA;&#x9;,'2' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,'  ' AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,WP.GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.STATPLANINDICATORCODE&#xA;&#x9;,WP.BCEG --BLANK IF 015&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(ContentsPremium.[Group II] &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(ContentsPremium.[Group II],0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,ContentsPremium.[Group II] AS PremAmt&#xA;&#x9;,'ContentsCoverageGroup2' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(onePremAmt) AS 'Group I'&#xA;&#x9;&#x9;  ,sum(twoPremAmt + threePremAmt) AS 'Group II'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Premium'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;&#x9;  ) ContentsPremium ON WP.PolicyID = ContentsPremium.PolicyID AND WP.IncDate = ContentsPremium.Inceptiondate AND WP.PostDate = ContentsPremium.PostDate&#xA;WHERE ContentsPremium.[Group II] &lt;&gt; 0&#xA;&#xA;&#xA;------------------ BUSINESSINCOME &#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'015' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'1' AS COVERAGECODE --WHAT IS THIS SUPPOSED TO BE?? 4-7?&#xA;&#x9;,'1' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,WP.PROTECTIONCLASS AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,WP.GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.STATPLANINDICATORCODE&#xA;&#x9;,'  ' AS BCEG --BLANK IF 015&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(BusIncome.Premium &lt; 0, -1*BusIncome.Coverage, BusIncome.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(BusIncome.Premium,0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,BusIncome.Premium AS PremAmt&#xA;&#x9;,'BusinessIncome' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;      ,[InceptionDate]&#xA;      ,PostDate&#xA;      ,sum(Limit) AS 'Coverage'&#xA;      ,sum(onePremAmt+twoPremAmt+threePremAmt) as 'Premium'&#xA;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;WHERE Endform = '58C'&#xA;GROUP BY [PolicyID]&#xA;      ,[InceptionDate]&#xA;      ,PostDate) BusIncome ON WP.PolicyID = BusIncome.PolicyID AND WP.IncDate = BusIncome.Inceptiondate AND WP.PostDate = BusIncome.PostDate &#xA;WHERE BusIncome.Premium &lt;&gt; 0&#xA;&#xA;&#xA;-----------------------------------------update final records----------------------------------------&#xA;------------------------------------------------------------------------------------------------------&#xA;&#xA;----------------Update building premium &#xA;-- accounting for businessincome (separate record)&#xA;UPDATE P&#xA;SET PREMIUM = ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(P.PremAmt - BusIncome.PremAmt,0)),&#xA;&#x9;EXPOSURE = ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(P.PremAmt - BusIncome.PremAmt &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)),&#xA;&#x9;PremAmt = P.PremAmt - BusIncome.PremAmt&#xA;FROM ASIdev..ISOReporting_final_Commercial_Premium P&#xA;--business income premium amount&#xA;&#x9;JOIN (SELECT PolicyID&#xA;&#x9;&#x9;&#x9;  ,IncDate&#xA;&#x9;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;&#x9;  ,PremAmt&#xA;&#x9;&#x9;&#x9;  ,Category&#xA;&#x9;&#x9;&#x9;FROM ASIdev..ISOReporting_final_Commercial_Premium P&#xA;&#x9;&#x9;&#x9;WHERE Category = 'BusinessIncome') BusIncome ON P.PolicyID = BusIncome.PolicyID AND P.IncDate = BusIncome.Incdate AND P.PostDate = BusIncome.PostDate &#xA;--building exposure&#x9;&#xA;&#x9;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON P.PolicyID = Coverages.PolicyID AND P.IncDate = Coverages.Inceptiondate AND P.PostDate = Coverages.PostDate&#xA;WHERE P.Category = 'BuildingCoverageGroup1'&#xA;&#xA;---------------Update construction code--------------&#xA;UPDATE P&#xA;SET P.CONSTRUCTIONCODE_BGII =  CASE WHEN SUBLINE = '027' THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN WP.NumStories &lt;= 6 THEN&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Masonry' THEN '21'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Fire Resistive' THEN '61'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Masonry' THEN '22'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Fire Resistive' THEN '62'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE P.PUBLICPROTECTIONCODE --SUBLINE = '015'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;,P.CONSTRUCTIONCODE_OTBGII = CASE WHEN SUBLINE = '015' THEN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN WP.ConstructionType = 'Frame' THEN '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WP.ConstructionType = 'Masonry' THEN '2'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WP.ConstructionType = 'Fire Resistive' THEN '6'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE ' ' --SUBLINE = '027'&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; END&#xA;FROM ASIdev..ISOReporting_final_Commercial_Premium P&#xA;JOIN ASIdev..ISOReporting_staging_Commercial_Premium WP ON WP.PolicyID = P.PolicyID AND WP.IncDate = P.Incdate &#xA;&#xA;-----------------Update Deductible code----------------&#xA;--  FROM [asi1].[dbo].[PLCoveragePkg]&#xA;  --  where policyid = 'FAC1165' and CoverageDescr = 'building coverage' in order to get hurdeductible amount&#xA;    --gets messy if split by subline. don't always have hurrdeduct recorded&#xA;&#xA;UPDATE P &#xA;SET DEDUCTIBLECODE = CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 1000 THEN '7 '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 2500 THEN '8 '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 5000 THEN '9 '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 10000 THEN 'A '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 25000 THEN 'B '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 50000 THEN 'C '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '9 '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; END&#xA;FROM ASIdev..ISOReporting_final_Commercial_Premium P&#xA;JOIN ASIdev..ISOReporting_staging_Commercial_Premium WP ON WP.PolicyID = P.PolicyID AND WP.IncDate = P.Incdate &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA;&#xA;----------------Update State Exception code-------------&#xA;UPDATE P &#xA;SET P.STATEEXCEPTION = CASE WHEN STATECODE IN ('09', '39') /*FL, SC*/ THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN WindMitCredits =  0 THEN 'Z'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 5 THEN 'Y'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 10 THEN 'X'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 15 THEN 'W'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 20 THEN 'V'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 25 THEN 'U'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 30 THEN 'T'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 35 THEN 'S'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 40 THEN 'R'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 45 THEN 'Q'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 50 THEN 'P'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 55 THEN 'O'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 60 THEN 'N'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 65 THEN 'M'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 70 THEN 'L'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 75 THEN 'K'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 80 THEN 'J'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 85 THEN 'I'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &lt;= 90 THEN 'H'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WindMitCredits &gt; 90 THEN 'G'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '7'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--WHEN STATECODE = '31' /*NY*/ THEN '' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--WHEN STATECODE = '52' /*HI*/ THEN ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;--WHEN STATECODE = '38' /*RI*/ THEN ''&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE ' '&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END &#xA;&#xA;FROM ASIdev..ISOReporting_final_Commercial_Premium P&#xA;LEFT JOIN (SELECT CP.PolicyID,CP.InceptionDate, ROUND(twoPremAmt * 100,0) AS 'WindMitCredits' &#xA;&#x9;&#x9;   FROM ASI1.dbo.PLCoveragePkg CP&#xA;&#x9;&#x9;   INNER JOIN (SELECT PolicyID,InceptionDate, MAX(PostDate) AS 'PD' FROM ASI1.dbo.PLCoveragePkg WHERE EndForm = '63' &#xA;&#x9;&#x9;   GROUP BY PolicyID,InceptionDate) MAXPD ON MAXPD.PolicyID = CP.PolicyID AND MAXPD.InceptionDate = CP.InceptionDate AND &#xA;&#x9;&#x9;   MAXPD.PD = CP.PostDate WHERE EndForm = '63' GROUP BY CP.PolicyID,CP.InceptionDate,twoPremAmt) StateExceptionIndicator ON &#xA;&#x9;&#x9;   StateExceptionIndicator.PolicyID = P.PolicyID AND StateExceptionIndicator.InceptionDate = P.IncDate&#xA;WHERE SUBLINE = '027'&#xA;&#xA;&#xA;-------Update YEARCONSTRUCTION-----------------------&#xA;UPDATE P    ----Update to blank when given conditions are true. Below is based on E752.&#xA;SET YEARCONSTRUCTION = '  '&#xA;FROM ASIdev..ISOReporting_final_Commercial_Premium P&#xA;WHERE (SUBLINE = '015' OR SUBLINE = '027') &#xA;AND IncDate &lt; '5/1/2015'&#xA;AND GREENUPGRADEINDICATOR NOT IN ('8')&#xA;AND TYPEOFPOLICY NOT IN ('20', '2A', '80', '8A')&#xA;AND LEFT(ClassificationCode,1) NOT IN ('7', '8', '9')&#xA;AND COVERAGECODE NOT IN ('C', 'D', 'E', 'F', '8')&#xA;AND CLASSIFICATIONCODE NOT IN ('1160', '1165', '1170', '1185', '1190', '1200', '0833')&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ReportDate1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ReportDate2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ReportDate3_ReserveMonth"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::LastDayOfQuarter"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load NonTX Commercial Data\SQL Truncate Commercial Loss table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{B7C9FF60-6FB2-40D0-9471-A4A4D26734B2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Truncate Commercial Loss table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE ASIDev.dbo.ISOReporting_final_Commercial_Losses" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load NonTX Commercial Data\SQL Truncate Commercial Premium tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{993cb06f-a3e0-41ba-99b3-25d777bffa2c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Truncate Commercial Premium tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE ASIDev.dbo.ISOReporting_staging_Commercial_Premium&#xA;GO&#xA;&#xA;TRUNCATE TABLE ASIDev.dbo.ISOReporting_final_Commercial_Premium&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{90E5C323-927B-47D3-A7AE-60FFEA682C66}"
          DTS:From="Package\SEQ - Load NonTX Commercial Data\SQL Truncate Commercial Premium tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Premium tables" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{737BCC9E-81AF-4062-A567-CDD2F17856A6}"
          DTS:From="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Premium tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{EC930BD6-96C6-4323-A8EE-C8E72F3690A3}"
          DTS:From="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQ - Load NonTX Commercial Data\SQL Truncate Commercial Loss table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{93052B12-0C98-4EE1-8540-D310E321200A}"
          DTS:From="Package\SEQ - Load NonTX Commercial Data\SQL Truncate Commercial Loss table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Loss table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{BFAB06C1-F444-40C7-B1FA-DDDED6775498}"
          DTS:From="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Loss table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SEQ - Load TX Commercial Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:Disabled="True"
      DTS:DTSID="{3F4663CB-A5A0-41FA-8EB5-FF42AFB45160}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SEQ - Load TX Commercial Data">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{613AE849-A221-4443-AE37-35342ACC9CDD}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT Load DataCall for TX Commercial Loss"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="DST_FF TX Commercial 3424">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[FF_CONN_TX_Comm_3424]"
                      connectionManagerRefId="Package.ConnectionManagers[FF_CONN_TX_Comm_3424]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input].Columns[DATACALL]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="DATACALL"
                          externalMetadataColumnId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].Columns[DATACALL]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="200"
                          name="DATACALL" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SRC_OLE ASIDev TX Commercial Loss"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT CONCAT([CompanyNumber] --'3424' for testing
      ,[TransactionType]
      ,[AccountingDate]
      ,[ISOInceptionDate]
      ,[ISOLossDate]
      ,[MGAIndicator]
      ,[StateCode]
      ,[ISOTerritory]
      ,[TypeofPolicyCode]
      ,[ASLOB]
      ,[subline]
      ,[ClassificationCode]
      ,[StateExceptionIndicatorII]
      ,[StateExceptionIndicator]
      ,[CoverageCode]
      ,[RatingIDCode]
      ,[ConstructionCodeOTBGII]
      ,[ConstructionCodeBGII]
      ,[Deductible]
      ,[OccupancyGroupCode]
      ,[GreenUpgradeIndicator]
      ,[RFU4546]
      ,[MoldDamageCoverageCode]
      ,[DeductibleAmount]
      ,[TerrorismCoverageCode]
      ,[RFU5460]
      ,[TransactionIdentifier]
      ,[OrdinanceLawID]
      ,[ISOUse]
      ,[ZipTerritoryCode]
      ,[TypeofLossCode]
      ,[ClaimCount]
      ,[SIC]
      ,[RFU7380]
      ,[YearConstruction] --check not updated yet
      ,[CoInsuranceCode]
      ,[Exposure]
      ,[RFU8893]
      ,[BCEGcode]
      ,[LossAmount]
      ,[LossRecordID]
      ,[PremiumRecordID]) AS DATACALL
      ,[Company]
  FROM [ASIDev].[dbo].[ISOReporting_final_TX_Commercial_Losses]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Connections[OleDbConnection]"
                      connectionManagerID="{66467500-4919-415A-BBC7-8E1FF4DABEF2}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLE_CONN_ASIDev]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          length="4000"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          name="DATACALL"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].Columns[Company]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].ExternalColumns[Company]"
                          length="255"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].Columns[Company]"
                          name="Company"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          name="DATACALL" />
                        <externalMetadataColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output].ExternalColumns[Company]"
                          dataType="wstr"
                          length="255"
                          name="Company" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          name="DATACALL" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[Company]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[Company]"
                          name="Company" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss.Paths[OLE DB Source Output]"
                  endId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{DCE3E5DF-A18F-495B-B07B-9608B206FFE9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="DFT Load DataCall for TX Commercial Premium"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="DST_FF TX Commercial 3424">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[FF_CONN_TX_Comm_3424]"
                      connectionManagerRefId="Package.ConnectionManagers[FF_CONN_TX_Comm_3424]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input].Columns[DATACALL]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="DATACALL"
                          externalMetadataColumnId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].Columns[DATACALL]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="200"
                          name="DATACALL" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SRC_OLE ASIDev TX Commercial Premium"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT CONCAT([COMPANYNUMBER] -- '3424' testing purposes
      ,[TRANSACTIONTYPECODE]
      ,[ACCOUNTINGDATE]
      ,[INCEPTIONDATE]
      ,[EFFECTIVEDATE]
      ,[EXPIRATIONDATE]
      ,[STATECODE]
      ,[TERRITORY]
      ,[TYPEOFPOLICY]
      ,[ASLOB]
      ,[SUBLINE]
      ,[CLASSIFICATIONCODE]
      ,[STATEEXCEPTION2]
      ,[STATEEXCEPTION]
      ,[COVERAGECODE]
      ,[RATINGIDENTIFICATION]
      ,[CONSTRUCTIONCODE_OTBGII]
      ,[CONSTRUCTIONCODE_BGII]
      ,[DEDUCTIBLECODE]
      ,[OCCUPANCYGROUPCODE]
      ,[GREENUPGRADEINDICATOR] 
	  ,'  '
      ,[MOLDCOVERAGE] --1 or 8? need to map to LU
      ,[DEDUCTIBLEAMOUNT]
      ,[TERRORISM]
      ,[LOSTCOSTDATE]
      ,[TRANSACTIONID]
      ,[ORDINANCELAWID]
	  ,' '
      ,[ZIPCODE]
      ,[YEARCONSTRUCTION] --'  '
      ,[EFFECTIVEDAY]
      ,[EXPIRATIONDAY]
      ,[MGAINDICATOR]
      ,[COINSURANCE]
      ,[INDIVDUALRISKRATEMOD]
      ,[EXPOSURE]
      ,[RATEMODFACTOR]
      ,[LOSSCOSTMULTIPLIER]
      ,[BCEG] 
      ,[PREMIUM]
	  ,'              '
      ,[PREMIUMRECORDID]) AS DATACALL
      ,[Company]

  FROM [ASIDev].[dbo].[ISOReporting_final_TX_Commercial_Premium]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Connections[OleDbConnection]"
                      connectionManagerID="{66467500-4919-415A-BBC7-8E1FF4DABEF2}:external"
                      connectionManagerRefId="Project.ConnectionManagers[OLE_CONN_ASIDev]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          length="4000"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].Columns[DATACALL]"
                          name="DATACALL"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].Columns[Company]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[Company]"
                          length="15"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].Columns[Company]"
                          name="Company"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          name="DATACALL" />
                        <externalMetadataColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output].ExternalColumns[Company]"
                          dataType="wstr"
                          length="15"
                          name="Company" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[DATACALL]"
                          name="DATACALL" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[Company]"
                          dataType="wstr"
                          length="15"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[Company]"
                          name="Company" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium.Paths[OLE DB Source Output]"
                  endId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424.Inputs[Flat File Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Loss table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{115a7366-d0c8-4e07-b889-e8e3165740da}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Load TX Commercial Loss table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="----------------------------------------------Set Dates---------------------------------------&#xA;----------------------------------------------------------------------------------------------&#xA;&#xA;declare @reportdate1 datetime = ?&#xA;declare @reportdate2 datetime = ?&#xA;declare @reportdate3 datetime = ?&#xA;declare @lastdateofquarter datetime = ?&#xA;--declare @startdate date = ?&#xA;--declare @enddate date = ?&#xA;--declare @reservedate date = ?&#xA;declare @accountingdate varchar(2) = ?&#xA;&#xA;------------------------------------------Load temp staging table-------------------------------&#xA;-----------------------------------------------------------------------------------------------&#xA;&#xA;--paid losses&#xA;SELECT Company,&#xA;&#x9;&#x9;LossDate,&#xA;&#x9;&#x9;State,&#xA;&#x9;&#x9;P.PolicyID,&#xA;&#x9;&#x9;County,&#xA;&#x9;&#x9;ZipCode,&#xA;&#x9;&#x9;PlanType,&#xA;&#x9;&#x9;ClaimNumber AS ClaimID,&#xA;&#x9;&#x9;Peril,&#xA;&#x9;&#x9;IIF(Coverage IS NULL, 'A', Coverage) AS Coverage,&#xA;&#x9;&#x9;LOB,&#xA;&#x9;&#x9;PaidLosses AS Amount,&#xA;&#x9;&#x9;IIF(CC.Checknum IS NOT NULL, '1', '0') AS CLAIMCOUNT,&#xA;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;'6' AS TransactionType&#xA;&#x9;&#x9;--ReportDate &#x9;   &#xA;INTO #data&#x9;&#xA;FROM ASIDev..LossPaid P &#xA;   LEFT JOIN (SELECT PolicyID, MIN(checknum) as checknum FROM ASIdev..LossPaid                ----was counting '1' for each record, rather than for each claim. Each claim can only be counted once. Claim should be counted when first payment is made. &#xA;&#x9;   WHERE PaidLosses &lt;&gt; 0 &#xA;&#x9;   AND CoveragePMT &lt;&gt; 'EXP'&#xA;&#x9;   AND Company NOT LIKE 'PGR%'&#xA;&#x9;   --AND ReportDate IN(@reportDate1, @reportDate2 , @rsrvReportDate) &#xA;&#x9;   AND LOB &lt;&gt; '5.1'&#xA;&#x9;   AND PlanType NOT IN('CPP','CPL','CPO')&#xA;&#x9;   AND STATE &lt;&gt; 'TX' --tx reported separately&#xA;&#x9;   AND (InceptionDate IS NULL OR InceptionDate &gt;= '1/1/2011')&#xA;&#x9;  GROUP BY PolicyID) CC ON CC.PolicyID = P.PolicyID AND CC.checknum = P.checknum  &#xA;WHERE LOB = '5.1' &#xA;&#x9;AND ReportDate IN (@reportdate1,  @reportdate2, @reportdate3)&#xA;&#x9;AND State = 'TX'&#xA;&#x9;AND PaidLosses IS NOT NULL&#xA;&#x9;  &#xA;&#xA;--reserves   &#xA;INSERT INTO #data&#xA;SELECT Company,&#xA;&#x9;LossDate,&#xA;&#x9;State,&#xA;&#x9;PolicyID,&#xA;&#x9;County,&#xA;&#x9;ZipCode,&#xA;&#x9;PlanType,&#xA;&#x9;ClaimNumber AS ClaimID,&#xA;&#x9;Peril,&#xA;&#x9;Coverage,&#xA;&#x9;LOB,&#xA;&#x9;Reserves AS Amount,&#xA;&#x9;'0' AS ClaimCount,&#xA;&#x9;InceptionDate,&#xA;&#x9;'7' AS TransactionType&#xA;&#x9;--ReportDate&#xA;FROM ASIDev..LossReserves R &#xA;WHERE LOB = '5.1' &#xA;&#x9;AND State = 'TX' &#xA;&#x9;AND Reserves IS NOT NULL &#xA;&#x9;AND ReportDate = @reportdate3 --@reservedate&#xA;&#x9;AND Peril &lt;&gt; '*' --added AND Peril &lt;&gt; '*' bc this was a repeat claim that was opened and causes errors. * is for no peril. ok if paid, not if reserve&#xA;&#xA;--salvage&#xA;INSERT INTO #data&#xA;SELECT Company,&#xA;&#x9;[Date of Loss] AS LossDate,&#xA;&#x9;State,&#xA;&#x9;NULL AS PolicyID,&#xA;&#x9;NULL AS County,&#xA;&#x9;NULL AS ZipCode,&#xA;&#x9;PlanID AS PlanType,&#xA;&#x9;[Claim No] AS ClaimID,&#xA;&#x9;NULL AS Peril,&#xA;&#x9;NULL AS Coverage,&#xA;&#x9;LOB,&#xA;&#x9;-1*Amount,&#xA;&#x9;'0' AS ClaimCount,&#xA;&#x9;NULL AS InceptionDate,&#xA;&#x9;'4' AS TransactionType&#xA;&#x9;--[Acctg Date] AS ReportDate&#xA;FROM ASIDev..MCL_tblSalvage S&#xA;--JOIN ASIDev..LossPaid LP ON S.[Claim No] = LP.ClaimNumber&#xA;WHERE LOB IN  ('5.1', 51) &#xA;&#x9;AND State = 'TX' &#xA;&#x9;AND Amount IS NOT NULL &#xA;&#x9;AND ([Acctg Date]   &gt;= @reportdate1 AND [Acctg Date] &lt;= @lastdateofquarter) --BETWEEN @startdate AND @enddate) &#xA;&#xA;----------------------------------------------update staging records--------------------------------------&#xA;----------------------------------------------------------------------------------------------------------&#xA;&#xA;------------update salvage info using paid loss table---------------&#xA;UPDATE D&#xA;SET D.PolicyID = L.PolicyID,&#xA;&#x9;D.Peril = L.Peril,&#xA;&#x9;D.Coverage = L.Coverage,&#xA;&#x9;D.County = L.County,&#xA;&#x9;D.InceptionDate = L.InceptionDate,&#xA;&#x9;D.ZipCode = L.ZipCode&#xA;FROM #data D&#xA;JOIN (SELECT PolicyID, Peril, MAX(Coverage) AS Coverage, InceptionDate, County, ZipCode, ClaimNumber &#xA;&#x9;&#x9;FROM ASIDev..LossPaid &#xA;&#x9;&#x9;GROUP BY PolicyID, Peril, InceptionDate, County, ZipCode, ClaimNumber &#xA;&#x9;&#x9;) L ON LEFT(D.[ClaimID], 6) = LEFT(L.ClaimNumber, 6) AND  RIGHT(D.[ClaimID], 6) = RIGHT(L.ClaimNumber, 6)  --L ON D.ClaimID = L.ClaimNumber --use max so that only one coverage option&#xA;WHERE D.PolicyID IS NULL&#xA;&#x9;OR D.Peril IS NULL&#xA;&#x9;OR D.County IS NULL&#xA;&#x9;OR D.InceptionDate IS NULL&#xA;&#x9;OR D.Coverage IS NULL&#xA;&#x9;OR D.ZipCode IS NULL&#xA;&#xA;-----------update inceptiondate using claims table----------------&#xA;UPDATE D&#xA;SET D.InceptionDate = C.InceptionDate&#xA;FROM #data D&#xA;JOIN Claims..Claims C ON D.ClaimID = C.ClaimID&#xA;WHERE D.InceptionDate IS NULL&#xA;&#x9;AND C.InceptionDate &lt;&gt; '' --No coverage claims&#xA;&#xA;-------------------------------------------------delete records-------------------------------------------&#xA;------------------------------------------------------------------------------------------------------------&#xA;DELETE FROM #data&#xA;WHERE InceptionDate &lt; '1/1/2011' --NISS&#xA;&#x9;OR InceptionDate IS NULL --can't find match in multiple tables&#xA;&#xA;-----------------------------------------------load final report-------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------------&#xA;&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_TX_Commercial_Losses&#xA;SELECT Company,&#xA;&#x9;LossDate,&#xA;&#x9;State,&#xA;&#x9;PolicyID,&#xA;&#x9;County,&#xA;&#x9;ZipCode,&#xA;&#x9;PlanType,&#xA;&#x9;ClaimID,&#xA;&#x9;Peril,&#xA;&#x9;Coverage,&#xA;&#x9;LOB,&#xA;&#x9;TotalAmount,&#xA;&#x9;InceptionDate,&#xA;&#x9;TransactionType,&#xA;&#x9;Subline,&#xA;&#x9;--LUC.ISO_CompanyCode AS CompanyNumber,&#xA;&#x9;ASIDev.dbo.Stat_Reporting_Company_Conversion(Company) COMPANYNUMBER,&#xA;&#x9;@accountingdate AS AccountingDate,&#xA;&#x9;ASIDev.dbo.Stat_Reporting_Date_Conversion(InceptionDate, 3) AS ISOInceptionDate,&#xA;&#x9;CASE WHEN CAST(MONTH(LossDate) AS VARCHAR(2)) = '10' THEN '0'&#xA;&#x9;&#x9;WHEN CAST(MONTH(LossDate) AS VARCHAR(2)) = '11' THEN '-'&#xA;&#x9;&#x9;WHEN CAST(MONTH(LossDate) AS VARCHAR(2)) = '12' THEN '&amp;'&#xA;&#x9;&#x9;ELSE CAST(MONTH(LossDate) AS VARCHAR(2))&#xA;&#x9;&#x9;END + CAST(RIGHT(YEAR(LossDate),2) AS VARCHAR(2)) + REPLICATE('0',2-LEN(CAST(RIGHT(DAY(LossDate),2) AS VARCHAR(2))))&#xA;&#x9;    + CAST(RIGHT(DAY(LossDate),2) AS VARCHAR(2)) AS ISOLossDate, &#xA;&#x9;'   ' AS ISOTerritory,&#xA;&#x9;' ' AS MGAIndicator,&#xA;&#x9;'42' AS StateCode,&#xA;&#x9;'  ' AS TypeofPolicyCode,&#xA;&#x9;'051' AS ASLOB,&#xA;&#x9;'    ' AS ClassificationCode,&#xA;&#x9;' ' AS StateExceptionIndicatorII, --none for TX&#xA;&#x9;' ' AS StateExceptionIndicator, --none for TX&#xA;&#x9;CASE WHEN Coverage = 'C' THEN '2' ELSE '1' END AS CoverageCode,&#xA;&#x9;'2' AS RatingIDCode, &#x9;   -- need to check this one going forward to make sure the default is correct&#xA;&#x9;' ' AS ConstructionCodeOTBGII,&#xA;&#x9;'  ' AS ConstructionCodeBGII, &#xA;&#x9;'  ' AS Deductible, &#xA;&#x9;' ' AS OccupancyGroupCode,&#xA;&#x9;CASE WHEN Subline = '011' THEN ' ' ELSE '9' END AS GreenUpgradeIndicator,&#xA;&#x9;'  ' AS RFU4546,&#xA;&#x9;'1' AS MoldDamageCoverageCode,&#xA;&#x9;'     ' AS DeductibleAmount, &#xA;&#x9;' ' AS TerrorismCoverageCode,&#xA;&#x9;'   ' AS 'RFU5460',&#xA;    '99' AS TransactionIdentifier,&#xA;&#x9;'1' AS OrdinanceLawID, --this needs to be coded?&#xA;&#x9;' ' AS ISOUse,&#xA;&#x9;CONVERT(VARCHAR,ZipCode) + REPLICATE('0',9-LEN(ZipCode)) AS ZipTerritoryCode,&#x9;&#xA;&#x9;&#x9;   &#x9; CASE WHEN REPLACE(Peril,' ','') IN('E','F') THEN '01'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('WI') THEN '42'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('H') THEN '72'&#xA;&#x9;&#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('EXP') THEN '03'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('VMM') THEN '05'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('WA') THEN '06'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('TH') THEN '07'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('SH') THEN '73'&#xA;&#x9;   &#x9;&#x9;  WHEN REPLACE(Peril,' ','') IN('COL') THEN '74'&#xA;&#x9;   &#x9;&#x9;  ELSE '09'&#xA;&#x9;   &#x9; END AS TypeofLossCode,&#xA;&#x9;ClaimCount, &#xA;&#x9;'    ' AS SIC, -- standard industrial classification&#xA;&#x9;' ' AS RFU7380,&#xA;&#x9;'  ' AS YearConstruction,&#xA;&#x9;'9' AS CoInsuranceCode, --can't find coverage 66 or 81 to pull in&#xA;&#x9;'       ' AS Exposure,&#xA;&#x9;'      ' AS RFU8893,&#xA;&#x9;'  ' AS BCEGcode, &#xA;&#x9;REPLICATE('0',8-LEN(ROUND(TotalAmount,0))) + CONVERT(VARCHAR,ROUND(TotalAmount,0)) AS LossAmount,&#xA;&#x9;LEFT(ClaimID,14) AS 'LossRecordID',&#xA;&#x9;CONVERT(VARCHAR,PolicyID) + REPLICATE(' ',23-LEN(PolicyID)) AS 'PremiumRecordID'&#xA;--INTO ASIDev.dbo.ISOReporting_final_TX_Commercial_Losses&#xA;FROM (SELECT Company,&#xA;&#x9;&#x9;LossDate,&#xA;&#x9;&#x9;State,&#xA;&#x9;&#x9;PolicyID,&#xA;&#x9;&#x9;County,&#xA;&#x9;&#x9;ZipCode,&#xA;&#x9;&#x9;PlanType,&#xA;&#x9;&#x9;ClaimID,&#xA;&#x9;&#x9;Peril,&#xA;&#x9;&#x9;Coverage,&#xA;&#x9;&#x9;LOB,&#xA;&#x9;&#x9;SUM(Amount) AS TotalAmount,&#xA;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;TransactionType,&#xA;&#x9;&#x9;ClaimCount,&#xA;&#x9;&#x9;--ReportDate,&#x9;&#x9;&#xA;&#x9;&#x9;CASE WHEN REPLACE(Peril,' ','') IN('E','F','VMM','VMM ','TH','WA', 'EXP', 'FRZ', '*') THEN '011'&#xA;&#x9;&#x9;&#x9;&#x9;WHEN REPLACE(Peril,' ','') IN('WI','H','VEH','SH','O','COL') THEN '027'&#xA;&#x9;&#x9;&#x9;&#x9;ELSE 'NEW PERILS'&#xA;&#x9;&#x9;END AS 'Subline'&#xA;&#x9;FROM #data D&#xA;&#x9;GROUP BY  Company,LossDate,State,PolicyID,County,ZipCode,PlanType,ClaimID,Peril,Coverage,LOB,InceptionDate, TransactionType, ClaimCount --, ReportDate&#xA;&#x9;HAVING SUM(Amount) &lt;&gt; 0 &#xA;&#x9;) DATA &#xA;--LEFT JOIN ASIdev..ISOReporting_LU_CompanyConversion LUC ON DATA.Company = LUC.CompanyID&#xA;&#xA;------------------------------------------------drop temp--------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------&#xA;&#xA;IF OBJECT_ID('tempdb..#data') IS NOT NULL&#xA;DROP TABLE #data&#xA;&#xA;--------------------------------------------update final records---------------------------------------&#xA;-------------------------------------------------------------------------------------------------------&#xA;&#xA;----Update Territory-----------------------------  &#xA;--try first to match with city.  if outside city, then just county match&#xA;UPDATE Loss&#xA;SET Loss.ISOTerritory = IIF(Terr.ISO_Territory IS NULL, TerrCounty.ISO_Territory ,Terr.ISO_Territory)&#x9;&#xA;FROM ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;JOIN ASI1..PLLocation L ON L.policyID = Loss.PolicyID AND L.InceptionDate = Loss.InceptionDate &#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NOT NULL AND STATE = 'TX') Terr ON Loss.State = Terr.State AND L.locCounty = Terr.County AND L.locCity = Terr.City&#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NULL AND STATE = 'TX') TerrCounty ON Loss.State = TerrCounty.State AND L.locCounty = TerrCounty.County&#xA;&#xA;----Update Building Info------------------------------------&#xA;UPDATE Loss&#xA;SET Loss.TypeofPolicyCode = CASE WHEN Building_Info.BldgType = 'Condo' THEN '59' --TX only option&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN PlanType = 'CPP' THEN '72'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN PlanType = 'CPO' THEN '73'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '00' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END,&#xA;&#x9;Loss.YearConstruction = LU.Isocode,&#xA;&#x9;Loss.bcegcode = CASE WHEN Subline = '011' THEN '  '&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;ELSE &#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN BCEG IN( '0', 'K', '  ' , NULL) THEN '99' -- blank is not picking so manually put in 99&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;ELSE REPLACE(REPLICATE('0',2-LEN(BCEG)) + CONVERT(VARCHAR,BCEG),' ','') &#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;END, &#xA;&#x9;Loss.ClassificationCode =  CASE WHEN Building_Info.[No of Buildings] &lt;= 10 AND Building_Info.BldgType = 'Condo' THEN '0331'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Condo' THEN '0332'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Condo' THEN '0333'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 10 AND Building_Info.BldgType = 'Apt' THEN '0311'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Apt' THEN '0312'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Apt' THEN '0313'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '0702' --office building&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   END,&#xA;&#x9;Loss.ConstructionCodeOTBGII = CASE WHEN Subline = '011' THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ConstructionType = 'Masonry' THEN '2'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN ConstructionType = 'Fire Resistive' THEN '6'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE ' ' --027&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END,&#xA;&#x9;Loss.ConstructionCodeBGII = CASE WHEN Subline = '011' THEN --PROTECTIONCLASS&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN Sprinkler.PolicyID IS NOT NULL THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ProtectionClass IN ('01', '02', '03', '04', '05', '06', '07', '08', '09') THEN '02' --has some level of protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '03' --sprinklered, no protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE --no sprinkler&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ProtectionClass IN ('01', '02', '03', '04', '05', '06', '07', '08', '09') THEN '04' --has some level of protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '05' -- no protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE --027&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CASE WHEN [No of Stories] &lt;= 6 THEN&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  WHEN ConstructionType = 'Masonry' THEN '21'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  WHEN ConstructionType = 'Fire Resistive' THEN '61'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  WHEN ConstructionType = 'Masonry' THEN '22'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  WHEN ConstructionType = 'Fire Resistive' THEN '62'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; END &#xA;FROM ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;--building info: # stories, # buildings, bldg type, construction type&#xA;JOIN (SELECT PolicyID, &#xA;&#x9;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;&#x9;MAX(NoStories) AS 'No of Stories',&#xA;&#x9;&#x9;&#x9;MAX(BldgNumber) AS 'No of Buildings',&#x9;&#x9;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;MAX(CASE WHEN Description LIKE '%Condo%' THEN 'Condo' &#xA;&#x9;&#x9;&#x9;&#x9;WHEN Description LIKE '%office%' THEN 'Office' &#xA;&#x9;&#x9;&#x9;&#x9;ELSE 'Apt' END) AS 'BldgType',&#xA;&#x9;&#x9;&#x9;MAX(ConstructionType) AS 'ConstructionType',&#xA;&#x9;&#x9;&#x9;MAX(YearConstruction) AS 'YearConstruction'&#xA;&#x9;&#x9;&#x9;FROM ASI1..PLBuildingInfo GROUP BY PolicyID, InceptionDate) Building_Info ON Building_Info.PolicyID = Loss.PolicyID AND Building_Info.InceptionDate = Loss.InceptionDate&#xA;--Sprinklers&#xA;LEFT JOIN (  SELECT PolicyID, InceptionDate&#xA;&#x9;&#x9;&#x9;  FROM ASI1..PLCoveragePkg&#xA;&#x9;&#x9;&#x9;  WHERE EndForm = '64') Sprinkler ON Loss.PolicyID = Sprinkler.PolicyID AND Loss.InceptionDate = Sprinkler.InceptionDate &#xA;--Protection Class and BCEG&#xA;LEFT JOIN (SELECT PolicyID, InceptionDate, MAX(ProtectionClass) AS ProtectionClass, MAX(BCEG) AS BCEG FROM ASI1..PLMaster GROUP BY PolicyID, InceptionDate) PLM ON PLM.PolicyID = Loss.PolicyID AND PLM.InceptionDate = Loss.InceptionDate &#xA;--Year Construction&#xA;LEFT JOIN ASIDev..ISOReporting_LU_YearConstruction LU  ON LU.YearConstruction = Building_Info.YearConstruction&#xA;&#xA;&#xA;----Update Terrorism-------------------------------&#xA;UPDATE Loss&#xA;SET Loss.TerrorismCoverageCode = CASE WHEN Terrorism.CoverageDescr = 'Terrorism' THEN '4' ELSE '2' END&#xA;FROM ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;--Terrorism&#xA;LEFT JOIN (SELECT CP.PolicyID,CP.InceptionDate,CoverageDescr FROM ASI1.dbo.PLCoveragePkg CP&#xA;&#x9;&#x9;   INNER JOIN (SELECT PolicyID,InceptionDate, MAX(PostDate) AS 'PD' FROM ASI1.dbo.PLCoveragePkg WHERE EndForm = '96A' &#xA;&#x9;&#x9;   GROUP BY PolicyID,InceptionDate) MAXPD ON MAXPD.PolicyID = CP.PolicyID AND MAXPD.InceptionDate = CP.InceptionDate AND &#xA;&#x9;&#x9;   MAXPD.PD = CP.PostDate WHERE EndForm = '96A' GROUP BY CP.PolicyID,CP.InceptionDate,CoverageDescr) Terrorism ON&#xA;&#x9;&#x9;   Terrorism.PolicyID = Loss.PolicyID AND Terrorism.InceptionDate = Loss.InceptionDate&#xA;&#xA;----Update Deductible &#xA;UPDATE Loss&#xA;SET Loss.Deductible = CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible = 0 THEN '01'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 1000 THEN '07'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 2500 THEN '08'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 5000 THEN '09'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 10000 THEN '10'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 25000 THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible &lt;= 50000 THEN '12'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '09'&#x9;&#x9;&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9; END,&#xA;&#x9;Loss.DeductibleAmount = CONVERT( VARCHAR,REPLICATE('0',5-LEN(CONVERT(INT,ROUND(NHRdeductible,0))))) + CONVERT(VARCHAR,CONVERT(INT,ROUND(NHRdeductible,0)))&#xA;FROM ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;JOIN (SELECT PolicyID, InceptionDate, MAX(NHRdeductible) AS NHRdeductible FROM ASI1..PLMaster GROUP BY PolicyID, InceptionDate) PLM ON PLM.PolicyID = Loss.PolicyID AND PLM.InceptionDate = Loss.InceptionDate &#xA;&#xA;----Update Exposure---------------------------------&#xA;UPDATE Loss&#xA;SET Loss.Exposure = REPLICATE('0',7-LEN(Exposure.Coverage)) + CONVERT(VARCHAR,Exposure.Coverage)&#xA;FROM ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;--Exposure (coverage)&#xA;LEFT JOIN (SELECT CP.PolicyID, CP.InceptionDate ,REPLACE(ROUND(SUM(Limit)/1000,0),'.00','') AS 'Coverage' ,CoverageDescr FROM ASI1.dbo.PLCoveragePkg CP&#xA;&#x9;&#x9;  INNER JOIN (SELECT PolicyID,InceptionDate, MAX(PostDate) AS 'PD' FROM ASI1.dbo.PLCoveragePkg WHERE EndForm = '63' &#xA;&#x9;&#x9;  GROUP BY PolicyID,InceptionDate) MAXPD ON MAXPD.PolicyID = CP.PolicyID AND MAXPD.InceptionDate = CP.InceptionDate AND &#xA;&#x9;&#x9;  MAXPD.PD = CP.PostDate&#xA;&#x9;&#x9;  WHERE CoverageDescr IN('Building Coverage') GROUP BY CP.PolicyID ,CP.InceptionDate ,PostDate ,CoverageDescr) Exposure ON&#xA;&#x9;&#x9;  Exposure.PolicyID = Loss.PolicyID AND Exposure.InceptionDate = Loss.InceptionDate&#xA;&#xA;--UPDATE Loss&#xA;--SET Loss.Exposure = REPLICATE('0',7-LEN(Exposure.Coverage)) + CONVERT(VARCHAR,Exposure.Coverage)&#xA;--FROM ASIDev..ISOReporting_final_Commercial_Losses Loss&#xA;--Exposure (coverage) --SHOULD THIS ALSO GRAB 'CONTENTS COVERAGE'? &#xA;--JOIN (SELECT CP.PolicyID, CP.InceptionDate ,REPLACE(ROUND(SUM(Limit)/1000,0),'.00','') AS 'Coverage' ,CoverageDescr FROM ASI1.dbo.PLCoveragePkg CP&#xA;&#x9;&#x9;   --INNER JOIN (SELECT PolicyID,InceptionDate, MAX(PostDate) AS 'PD' FROM ASI1.dbo.PLCoveragePkg WHERE EndForm = '63' &#xA;&#x9;&#x9;   --GROUP BY PolicyID,InceptionDate) MAXPD ON MAXPD.PolicyID = CP.PolicyID AND MAXPD.InceptionDate = CP.InceptionDate AND &#xA;&#x9;&#x9;   --MAXPD.PD = CP.PostDate&#xA;&#x9;&#x9;   --WHERE CoverageDescr IN('Building Coverage') GROUP BY CP.PolicyID ,CP.InceptionDate ,PostDate ,CoverageDescr) Exposure ON&#xA;&#x9;&#x9;   --Exposure.PolicyID = Loss.PolicyID AND Exposure.InceptionDate = Loss.InceptionDate&#xA;&#xA;&#xA;----Update Losses&#xA;Update Loss&#xA;SET YearConstruction = '  '&#xA;From ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;WHERE Subline IN ('011', '012', '013', '014') AND InceptionDate &lt; '5/1/2015'&#xA;And TransactionType = '7'&#xA;&#xA;&#xA;Update Loss&#xA;SET YearConstruction = '  '&#xA;From ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;WHERE Subline IN ('011', '012', '013', '014') AND InceptionDate &lt; '5/1/2015'&#xA;And TransactionType = '6'&#xA;&#xA;&#xA;Update Loss&#xA;SET YearConstruction = '  '&#xA;From ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;WHERE Subline IN ('015', '016', '017', '018', '027', '029', '035', '037', '039', '045', '055', '067', '069', '077', '079') &#xA;And InceptionDate Between '6/1/2012' and '4/30/2015'&#xA;And TransactionType = '7'&#xA;&#xA;&#xA;Update Loss&#xA;SET YearConstruction = '  '&#xA;From ASIDev..ISOReporting_final_TX_Commercial_Losses Loss&#xA;WHERE Subline IN ('015', '016', '017', '018', '027', '029', '035', '037', '039', '045', '055', '067', '069', '077', '079') &#xA;And InceptionDate Between '6/1/2012' and '4/30/2015'&#xA;And TransactionType = '6'           &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ReportDate1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ReportDate2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ReportDate3_ReserveMonth"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::LastDayOfQuarter"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::strAccountingDate"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Premium tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{e5d78cb5-963a-4c4d-8896-c942ae70ead6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Load TX Commercial Premium tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="------------------------------------set dates---------------------------------------------&#xA;------------------------------------------------------------------------------------------&#xA;declare @reportdate1 datetime = ?&#xA;declare @reportdate2 datetime = ?&#xA;declare @reportdate3 datetime = ?&#xA;declare @lastdateofquarter datetime = ?&#xA;&#xA;-----------------------------------------load staging table-----------------------------------------&#xA;------------------------------------------------------------------------------------------------------&#xA;&#xA;INSERT INTO ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium&#xA;SELECT PLM.PolicyID&#xA;&#x9;,PLM.PostDate&#x9;&#xA;&#x9;,PLM.InceptionDate AS IncDate&#xA;&#x9;,DATEADD(yyyy,1,PLM.InceptionDate) AS ExpDate&#xA;&#x9;,PLM.EffectiveDate AS EffDate&#xA;&#x9;,PLM.AccountingDate AS AccDate&#xA;&#x9;,PLM.AgentID&#xA;&#x9;,LUC.Company_WP&#xA;&#x9;,PLM.PlanID&#xA;&#x9;,PLM.TransactionType&#xA;&#x9;,PLM.TransactionDescr&#xA;&#x9;, CASE WHEN PLM.TransactionType = 'EB' THEN '15'&#xA;&#x9;&#x9;   WHEN PLM.TransactionType = 'RI' THEN '17'&#xA;&#x9;&#x9;   WHEN PLM.TransactionType = 'NB' THEN '18'&#xA;&#x9;&#x9;   WHEN PLM.TransactionType = 'RN' THEN '19'&#xA;&#x9;&#x9;   WHEN PLM.TransactionType = 'CN' THEN&#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN PLM.TransactionDescr IN ('Insured Request', 'Insured Request – Sold/Moved', 'Change Inception Date C-W', 'Unit Sold', 'Insured Request Cancellation', 'Insureds Request', 'Duplicate Policy') THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN PLM.TransactionDescr = 'Non pay' THEN '12'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN PLM.TransactionDescr IN ('Underwriting', 'Foreclosure') THEN '13'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '00'&#xA;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;ELSE '00'&#xA;&#x9;  END AS TRANSACTIONID &#xA;&#x9;,PLM.HURPremAmt&#xA;&#x9;,CAST('0' AS money) AS NonHurrPrem &#xA;&#x9;,PLM.TrxWrapPremAmt &#xA;&#x9;,PLM.LiabilityPremAmt&#xA;&#x9;,PLM.NHRdeductible&#xA;&#x9;,PLM.HURdeductible&#xA;&#x9;,PLM.MGAFee&#xA;&#x9;,PLM.InspectionFee&#xA;&#x9;,PLM.EMPAFee&#xA;&#x9;,PLM.FIGAFee&#xA;&#x9;,PLM.MiscFees&#xA;&#x9;,PLM.FCSFee&#xA;&#x9;,PLM.FHCFFee&#xA;&#x9;,PLM.CitizensFee&#xA;&#x9;,PLM.CitizensEAFee&#xA;&#x9;,PLM.TrxPremAmt&#xA;&#x9;,PLM.PremLessFees&#xA;&#x9;,L.locCounty&#xA;&#x9;,LEFT (L.locZipCode, 5) &#xA;&#x9;,PLM.State&#xA;&#x9;,Building_Info.ConstructionType&#xA;&#x9;,Building_Info.[No of Stories] as NumStories&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Company_Conversion(LUC.Company_WP) COMPANYNUMBER&#xA;&#x9;,'1' AS TRANSACTIONTYPECODE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(PLM.AccountingDate, 2) AS ACCOUNTINGDATE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(PLM.InceptionDate, 3) AS INCEPTIONDATE&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(PLM.EffectiveDate, 3) AS EFFECTIVEDATE &#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Date_Conversion(DATEADD(yyyy,1,PLM.InceptionDate), 3) AS EXPIRATIONDATE &#xA;&#x9;,'42' AS STATECODE&#xA;&#x9;,IIF(Terr.ISO_Territory IS NULL, TerrCounty.ISO_Territory ,Terr.ISO_Territory) AS TERRITORY&#x9;--try first to match with city.  if outside city, then just county match&#xA;&#x9;,CASE WHEN Building_Info.BldgType = 'Condo' THEN '59' --TX only option&#xA;&#x9;&#x9;&#x9;WHEN PLM.PlanID = 'CPP' THEN '72'&#xA;&#x9;&#x9;    WHEN PLM.PlanID = 'CPO' THEN '73'&#xA;&#x9;   ELSE '00' &#xA;&#x9;   END AS TYPEOFPOLICY&#xA;&#x9;,'051' AS ASLOB &#xA;&#x9;,CASE WHEN Building_Info.[No of Buildings] &lt;= 10 AND Building_Info.BldgType = 'Condo' THEN '0331'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Condo' THEN '0332'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Condo' THEN '0333'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings]&lt;= 10 AND Building_Info.BldgType = 'Apt' THEN '0311'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &lt;= 30 AND Building_Info.BldgType = 'Apt' THEN '0312'&#xA;&#x9;&#x9;&#x9;WHEN Building_Info.[No of Buildings] &gt; 30 AND Building_Info.BldgType = 'Apt' THEN '0313'&#xA;&#x9;&#x9;&#x9;ELSE '0702' --office building&#xA;&#x9;&#x9;&#x9;END AS CLASSIFICATIONCODE &#xA;&#x9;,PLM.ProtectionClass&#xA;&#x9;,'   ' AS LOSTCOSTDATE&#xA;&#x9;,'100' AS INDIVDUALRISKRATEMOD&#xA;&#x9;,'100' AS RATEMODFACTOR&#xA;&#x9;,'999' AS LOSSCOSTMULTIPLIER &#xA;&#x9;,' ' AS OCCUPANCYGROUPCODE --BLANK FOR SUBLINES 011 &amp; 027&#xA;&#x9;,'9' AS GREENUPGRADEINDICATOR&#xA;&#x9;,'1' AS MOLDCOVERAGE&#xA;&#x9;,'2' AS TERRORISM&#xA;&#x9;,'1' AS ORDINANCELAWID&#xA;&#x9;,LEFT (L.locZipCode, 5) + '0000' AS ZIPCODE&#xA;&#x9;,LU.ISOCode AS YEARCONSTRUCTION&#xA;&#x9;,CONVERT(varchar(2), PLM.EffectiveDate, 3) AS EFFECTIVEDAY&#xA;&#x9;,CONVERT(varchar(2), DATEADD(yyyy,1,PLM.InceptionDate), 3) AS EXPIRATIONDAY&#xA;&#x9;,' ' AS MGAINDICATOR&#xA;&#x9;,'6' AS COINSURANCE&#xA;&#x9;,' ' AS BUSOFFPREMISEPCT --BLANK FOR SUBLINES 011 &amp; 027&#xA;&#x9;,CASE PLM.BCEG&#xA;&#x9;&#x9;&#x9;WHEN '1' THEN '01' &#xA;&#x9;&#x9;&#x9;WHEN '2' THEN '02'&#xA;&#x9;&#x9;&#x9;WHEN '3' THEN '03'&#xA;&#x9;&#x9;&#x9;WHEN '4' THEN '04'&#xA;&#x9;&#x9;&#x9;WHEN '5' THEN '05'&#xA;&#x9;&#x9;&#x9;WHEN '6' THEN '06'&#xA;&#x9;&#x9;&#x9;WHEN '7' THEN '07'&#xA;&#x9;&#x9;&#x9;WHEN '8' THEN '08'&#xA;&#x9;&#x9;&#x9;WHEN '9' THEN '09' &#xA;&#x9;&#x9;&#x9;WHEN '10' THEN '10'&#xA;&#x9;&#x9;&#x9;ELSE '99' --ungraded, none, blank, letters&#xA;&#x9;&#x9;&#x9;END AS BCEG&#xA;&#x9;,PLM.PolicyID + REPLICATE(' ',33-LEN(PLM.PolicyID)) AS PREMIUMRECORDID&#xA;&#x9;&#xA;&#x9;--INTO ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium&#xA;FROM ASI1..PLMaster PLM&#xA;JOIN ASI1..PLLocation L ON PLM.PolicyID = L.PolicyID AND PLM.InceptionDate = L.InceptionDate AND PLM.PostDate = L.PostDate&#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NOT NULL AND STATE = 'TX') Terr ON PLM.State = Terr.State AND L.locCounty = Terr.County AND L.locCity = Terr.City&#xA;LEFT JOIN (SELECT State, City, County, ISO_Territory &#xA;&#x9;&#x9;&#x9;FROM ASIDev..ISOReporting_LU_Territory_Commercial&#xA;&#x9;&#x9;&#x9;WHERE City IS NULL AND STATE = 'TX') TerrCounty ON PLM.State = TerrCounty.State AND L.locCounty = TerrCounty.County&#xA;JOIN EOM..LUCompany LUC ON PLM.CompanyID = LUC.Company_PLMaster&#xA;JOIN (SELECT PolicyID, &#xA;&#x9;&#x9;&#x9;InceptionDate,&#xA;&#x9;&#x9;&#x9;MAX(NoStories) AS 'No of Stories',&#xA;&#x9;&#x9;&#x9;MAX(BldgNumber) AS 'No of Buildings',&#x9;&#xA;&#x9;&#x9;&#x9;MAX( YearConstruction) AS YearConstruction,&#x9;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;MAX(CASE WHEN Description LIKE '%Condo%' THEN 'Condo' &#xA;&#x9;&#x9;&#x9;&#x9;WHEN Description LIKE '%office%' THEN 'Office' &#xA;&#x9;&#x9;&#x9;&#x9;ELSE 'Apt' END) AS 'BldgType',&#xA;&#x9;&#x9;&#x9;MAX(ConstructionType) AS 'ConstructionType'&#xA;&#x9;&#x9;&#x9;FROM ASI1..PLBuildingInfo GROUP BY PolicyID, InceptionDate) Building_Info ON Building_Info.PolicyID = PLM.PolicyID AND Building_Info.InceptionDate = PLM.InceptionDate&#xA;JOIN ASIDev..ISOReporting_LU_YearConstruction LU  ON LU.YearConstruction = Building_Info.YearConstruction&#xA;&#xA;WHERE PLM.AccountingDate &gt;= @reportdate1 AND PLM.AccountingDate &lt;= @lastdateofquarter&#xA;&#x9;AND PLM.AgentID &lt;&gt; 'MP1111' &#xA;&#x9;AND PLM.InceptionDate &gt;= '1/1/2011'&#xA;&#x9;AND PLM.PlanID IN ('CPP', 'CPO')&#xA;&#x9;AND (PLM.TrxPremAmt &lt;&gt; 0 OR PLM.HURPremAmt &lt;&gt; 0)&#xA;&#x9;AND PLM.State = 'TX'&#xA;&#x9;AND PLM.PolicyId NOT LIKE 'Q%'&#xA;&#x9;AND PLM.PolicyId NOT LIKE 'TST%' &#xA; ORDER BY PLM.PolicyID&#xA;&#xA;&#xA;------------------------------------------update staging table---------------------------------&#xA;--------------------------------------------------------------------------------------------------&#xA;--------------------updateNonHurricanePremium----------------&#xA;UPDATE WP&#xA;SET WP.NonHurrPrem = ROUND(WP.PremLessFees - WP.HURPremAmt - WP.TrxWrapPremAmt - WP.LiabilityPremAmt,0)&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;&#xA;-------------------update Rate Modification Factor-----------&#xA;UPDATE WP&#xA;SET WP.RATEMODFACTOR = CASE WHEN LEN(RAteMOD.coverage) = 2 THEN CONCAT ( '0', RATEMOD.coverage) ELSE RATEMOD.coverage END &#xA;&#x9;,WP.INDIVDUALRISKRATEMOD = CASE WHEN LEN(RAteMOD.coverage) = 2 THEN CONCAT ( '0', RATEMOD.coverage) ELSE RATEMOD.coverage END &#xA;&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;      ,[InceptionDate]&#xA;      ,PostDate&#xA;      ,replace(DisplayLimit,'$','') AS 'Coverage'&#xA;      ,CoverageDescr&#xA;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;WHERE EndForm = '99'&#xA;GROUP BY [PolicyID]&#xA;      ,[InceptionDate]&#xA;      ,PostDate&#xA;      ,CoverageDescr&#xA;      ,DisplayLimit) RateMod ON WP.PolicyID = RateMod.PolicyID AND WP.incdate = RateMod.InceptionDate AND WP.postdate = RateMod.PostDate&#xA;&#xA;&#xA;-----------------------update Terrorism Code--------------&#xA;--non-certified never covered. 2 is base. 4 is endorsement for certified acts&#xA;UPDATE WP&#xA;SET WP.TERRORISM = '4'&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;&#x9;WHERE EndForm = '96A'&#xA;&#x9;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;    ) Terrorism ON WP.PolicyID = Terrorism.PolicyID AND WP.IncDate = Terrorism.Inceptiondate AND WP.PostDate = Terrorism.PostDate&#xA;&#xA;&#xA;--------------update ContentsPremiumGroupIandII----------------&#xA;--Fixes premium amount to be only for building when called later&#xA;UPDATE WP&#xA;SET WP.NonHurrPrem = WP.NonHurrPrem - Contents.[Group I]&#xA;&#x9; ,WP.TrxWrapPremAmt = WP.TrxWrapPremAmt - Contents.[Group II]&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;&#x9;,[InceptionDate]&#xA;&#x9;&#x9;&#x9;,PostDate&#xA;&#x9;&#x9;&#x9;,sum(onePremAmt) AS 'Group I'&#xA;&#x9;&#x9;&#x9;,sum(twoPremAmt + threePremAmt) AS 'Group II'&#xA;&#x9;&#x9;&#x9;,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr IN('Contents Premium')&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;&#x9;,[InceptionDate]&#xA;&#x9;&#x9;&#x9;,PostDate&#xA;&#x9;&#x9;&#x9;,CoverageDescr&#xA;&#x9;&#x9;&#x9;) Contents ON WP.PolicyID = Contents.PolicyID AND WP.IncDate = Contents.Inceptiondate AND WP.PostDate = Contents.PostDate&#xA;&#xA;&#xA;-----------------------------------------------load final report-----------------------------------------------&#xA;---------------------------------------------------------------------------------------------------------------&#xA;&#xA;--------BUILDINGCOVERAGEGROUP1&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_TX_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'011' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'1' AS COVERAGECODE&#xA;&#x9;,'1' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,WP.PROTECTIONCLASS AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,' ' AS GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,'     ' AS DEDUCTIBLEAMOUNT&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.LOSTCOSTDATE&#xA;&#x9;,WP.TRANSACTIONID &#xA;&#x9;,WP.ORDINANCELAWID&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.EFFECTIVEDAY&#xA;&#x9;,WP.EXPIRATIONDAY&#xA;&#x9;,WP.MGAINDICATOR&#xA;&#x9;,WP.COINSURANCE&#xA;&#x9;,WP.INDIVDUALRISKRATEMOD&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(WP.NonHurrPrem &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,WP.RATEMODFACTOR&#xA;&#x9;,WP.LOSSCOSTMULTIPLIER&#xA;&#x9;,'  ' AS BCEG --BLANK IF 011&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(WP.NonHurrPrem,0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,WP.NonHurrPrem AS PremAmt&#xA;&#x9;,'BuildingCoverageGroup1' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA; &#xA;&#xA;------------BUILDINGCOVERAGEGROUP2&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_TX_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'027' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'1' AS COVERAGECODE&#xA;&#x9;,'1' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,'  ' AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,WP.GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,'     ' AS DEDUCTIBLEAMOUNT&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.LOSTCOSTDATE&#xA;&#x9;,WP.TRANSACTIONID &#xA;&#x9;,WP.ORDINANCELAWID&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.EFFECTIVEDAY&#xA;&#x9;,WP.EXPIRATIONDAY&#xA;&#x9;,WP.MGAINDICATOR&#xA;&#x9;,WP.COINSURANCE&#xA;&#x9;,WP.INDIVDUALRISKRATEMOD&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(WP.HURPremAmt + WP.TrxWrapPremAmt &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,WP.RATEMODFACTOR&#xA;&#x9;,WP.LOSSCOSTMULTIPLIER&#xA;&#x9;,WP.BCEG --BLANK IF 011&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(WP.HURPremAmt + WP.TrxWrapPremAmt,0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,WP.HURPremAmt + WP.TrxWrapPremAmt AS PremAmt&#xA;&#x9;,'BuildingCoverageGroup2' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA; &#xA;&#xA;&#xA;----CONTENTSCOVERAGEGROUP1&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_TX_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'011' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'2' AS COVERAGECODE&#xA;&#x9;,'2' AS RATINGIDENTIFICATION --all states is 1 ?&#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,WP.PROTECTIONCLASS AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,' ' AS GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,'     ' AS DEDUCTIBLEAMOUNT&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.LOSTCOSTDATE&#xA;&#x9;,WP.TRANSACTIONID &#xA;&#x9;,WP.ORDINANCELAWID&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.EFFECTIVEDAY&#xA;&#x9;,WP.EXPIRATIONDAY&#xA;&#x9;,WP.MGAINDICATOR&#xA;&#x9;,WP.COINSURANCE&#xA;&#x9;,WP.INDIVDUALRISKRATEMOD&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(ContentsPremium.[Group I] &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,WP.RATEMODFACTOR&#xA;&#x9;,WP.LOSSCOSTMULTIPLIER&#xA;&#x9;,'  ' AS BCEG --BLANK IF 011&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(ContentsPremium.[Group I],0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,ContentsPremium.[Group I] AS PremAmt&#xA;&#x9;,'ContentsCoverageGroup1' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(onePremAmt) AS 'Group I'&#xA;&#x9;&#x9;  ,sum(twoPremAmt + threePremAmt) AS 'Group II'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Premium'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;&#x9;  ) ContentsPremium ON WP.PolicyID = ContentsPremium.PolicyID AND WP.IncDate = ContentsPremium.Inceptiondate AND WP.PostDate = ContentsPremium.PostDate&#xA;WHERE ContentsPremium.[Group I] &lt;&gt; 0&#xA;&#xA;&#xA;&#xA;-----------------CONTENTSCOVERAGEGROUP2&#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_TX_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'027' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'2' AS COVERAGECODE&#xA;&#x9;,'2' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,'  ' AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,WP.GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,'     ' AS DEDUCTIBLEAMOUNT&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.LOSTCOSTDATE&#xA;&#x9;,WP.TRANSACTIONID &#xA;&#x9;,WP.ORDINANCELAWID&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.EFFECTIVEDAY&#xA;&#x9;,WP.EXPIRATIONDAY&#xA;&#x9;,WP.MGAINDICATOR&#xA;&#x9;,WP.COINSURANCE&#xA;&#x9;,WP.INDIVDUALRISKRATEMOD&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(ContentsPremium.[Group II] &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,WP.RATEMODFACTOR&#xA;&#x9;,WP.LOSSCOSTMULTIPLIER&#xA;&#x9;,WP.BCEG --BLANK IF 011&#x9;&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(ContentsPremium.[Group II],0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,ContentsPremium.[Group II] AS PremAmt&#xA;&#x9;,'ContentsCoverageGroup2' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(onePremAmt) AS 'Group I'&#xA;&#x9;&#x9;  ,sum(twoPremAmt + threePremAmt) AS 'Group II'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Contents Premium'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;&#x9;  ) ContentsPremium ON WP.PolicyID = ContentsPremium.PolicyID AND WP.IncDate = ContentsPremium.Inceptiondate AND WP.PostDate = ContentsPremium.PostDate&#xA;WHERE ContentsPremium.[Group II] &lt;&gt; 0&#xA;&#xA;&#xA;------------------ BUSINESSINCOME &#xA;INSERT INTO ASIDev.dbo.ISOReporting_final_TX_Commercial_Premium&#xA;SELECT WP.COMPANYNUMBER&#xA;&#x9;,WP.TRANSACTIONTYPECODE&#xA;&#x9;,WP.ACCOUNTINGDATE&#xA;&#x9;,WP.INCEPTIONDATE&#xA;&#x9;,WP.EFFECTIVEDATE&#xA;&#x9;,WP.EXPIRATIONDATE &#xA;&#x9;,WP.STATECODE&#xA;&#x9;,WP.TERRITORY&#xA;&#x9;,WP.TYPEOFPOLICY&#xA;&#x9;,WP.ASLOB&#xA;&#x9;,'011' AS SUBLINE&#xA;&#x9;,WP.CLASSIFICATIONCODE&#xA;&#x9;,' ' AS STATEEXCEPTION2&#xA;&#x9;,' ' AS STATEEXCEPTION&#xA;&#x9;,'5' AS COVERAGECODE &#xA;&#x9;,'1' AS RATINGIDENTIFICATION &#xA;&#x9;,' ' AS CONSTRUCTIONCODE_OTBGII &#xA;&#x9;,'  ' AS CONSTRUCTIONCODE_BGII &#xA;&#x9;,WP.PROTECTIONCLASS AS PUBLICPROTECTIONCODE --BLANK IF 027&#xA;&#x9;,'  ' AS DEDUCTIBLECODE&#xA;&#x9;,WP.OCCUPANCYGROUPCODE&#xA;&#x9;,' ' AS GREENUPGRADEINDICATOR&#xA;&#x9;,WP.MOLDCOVERAGE&#xA;&#x9;,'     ' AS DEDUCTIBLEAMOUNT&#xA;&#x9;,WP.TERRORISM&#xA;&#x9;,WP.LOSTCOSTDATE&#xA;&#x9;,WP.TRANSACTIONID &#xA;&#x9;,WP.ORDINANCELAWID&#xA;&#x9;,WP.ZIPCODE&#xA;&#x9;,WP.YEARCONSTRUCTION&#xA;&#x9;,WP.EFFECTIVEDAY&#xA;&#x9;,WP.EXPIRATIONDAY&#xA;&#x9;,WP.MGAINDICATOR&#xA;&#x9;,WP.COINSURANCE&#xA;&#x9;,WP.INDIVDUALRISKRATEMOD&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(BusIncome.Premium &lt; 0, -1*BusIncome.Coverage, BusIncome.Coverage)/1000,0)) AS EXPOSURE&#xA;&#x9;,WP.RATEMODFACTOR&#xA;&#x9;,WP.LOSSCOSTMULTIPLIER&#xA;&#x9;,'  ' AS BCEG --BLANK IF 011&#xA;&#x9;,ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(BusIncome.Premium,0)) AS PREMIUM&#xA;&#x9;,WP.PREMIUMRECORDID&#xA;&#x9;,WP.Company_WP AS Company&#xA;&#x9;,WP.PolicyID&#xA;&#x9;,WP.IncDate&#xA;&#x9;,WP.PostDate&#xA;&#x9;,BusIncome.Premium AS PremAmt&#xA;&#x9;,'BusinessIncome' AS Category&#xA;FROM ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium WP &#xA;JOIN (SELECT [PolicyID]&#xA;      ,[InceptionDate]&#xA;      ,PostDate&#xA;      ,sum(Limit) AS 'Coverage'&#xA;      ,sum(onePremAmt+twoPremAmt+threePremAmt) as 'Premium'&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE Endform = '58C'&#xA;&#x9;GROUP BY [PolicyID]&#xA;      ,[InceptionDate]&#xA;      ,PostDate) BusIncome ON WP.PolicyID = BusIncome.PolicyID AND WP.IncDate = BusIncome.Inceptiondate AND WP.PostDate = BusIncome.PostDate &#xA;WHERE BusIncome.Premium &lt;&gt; 0&#xA;&#xA;&#xA;--------------------------------------update final report records--------------------------------------&#xA;------------------------------------------------------------------------------------------------------&#xA;&#xA;----------------Update building premium &#xA;-- accounting for businessincome (separate record)&#xA;UPDATE P&#xA;SET PREMIUM = ASIDev.dbo.Stat_Reporting_Numeric_Conversion(8,round(P.PremAmt - BusIncome.PremAmt,0)),&#xA;&#x9;EXPOSURE = ASIDev.dbo.Stat_Reporting_Numeric_Conversion(7,round(IIF(P.PremAmt - BusIncome.PremAmt &lt; 0, -1*Coverages.Coverage, Coverages.Coverage)/1000,0)),&#xA;&#x9;PremAmt = P.PremAmt - BusIncome.PremAmt&#xA;FROM ASIdev..ISOReporting_final_TX_Commercial_Premium P&#xA;--business income premium amount&#xA;&#x9;JOIN (SELECT PolicyID&#xA;&#x9;&#x9;&#x9;  ,IncDate&#xA;&#x9;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;&#x9;  ,PremAmt&#xA;&#x9;&#x9;&#x9;  ,Category&#xA;&#x9;&#x9;&#x9;FROM ASIdev..ISOReporting_final_TX_Commercial_Premium P&#xA;&#x9;&#x9;&#x9;WHERE Category = 'BusinessIncome') BusIncome ON P.PolicyID = BusIncome.PolicyID AND P.IncDate = BusIncome.Incdate AND P.PostDate = BusIncome.PostDate &#xA;--building exposure&#x9;&#xA;&#x9;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON P.PolicyID = Coverages.PolicyID AND P.IncDate = Coverages.Inceptiondate AND P.PostDate = Coverages.PostDate&#x9;&#xA;WHERE P.Category = 'BuildingCoverageGroup1'&#xA;&#x9;&#xA;---------------Update construction code--------------&#xA;UPDATE P&#xA;SET P.CONSTRUCTIONCODE_BGII =  CASE WHEN SUBLINE = '027' THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN WP.NumStories &lt;= 6 THEN&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Masonry' THEN '21'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Fire Resistive' THEN '61'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN ConstructionType = 'Frame' THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Masonry' THEN '22'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ConstructionType = 'Fire Resistive' THEN '62'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE --SUBLINE = '011' also checks sprinklers for TX&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN Sprinkler.PolicyID IS NOT NULL THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN P.PUBLICPROTECTIONCODE IN ('01', '02', '03', '04', '05', '06', '07', '08', '09') THEN '02' --has some level of protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '03' --sprinklered, no protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE --no sprinkler&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN P.PUBLICPROTECTIONCODE IN ('01', '02', '03', '04', '05', '06', '07', '08', '09') THEN '04' --has some level of protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '05' -- no protection&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;,P.CONSTRUCTIONCODE_OTBGII = CASE WHEN SUBLINE = '011' THEN &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN WP.ConstructionType = 'Frame' THEN '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WP.ConstructionType = 'Masonry' THEN '2'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; WHEN WP.ConstructionType = 'Fire Resistive' THEN '6'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '1'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ELSE ' ' --SUBLINE = '027'&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; END&#xA;FROM ASIdev..ISOReporting_final_TX_Commercial_Premium P&#xA;JOIN ASIdev..ISOReporting_staging_TX_Commercial_Premium WP ON WP.PolicyID = P.PolicyID AND WP.IncDate = P.Incdate &#xA;LEFT JOIN (  SELECT PolicyID, InceptionDate, Postdate&#xA;&#x9;&#x9;&#x9;  FROM ASI1..PLCoveragePkg&#xA;&#x9;&#x9;&#x9;  WHERE EndForm = '64') Sprinkler ON P.PolicyID = Sprinkler.PolicyID AND P.IncDate = Sprinkler.InceptionDate AND P.PostDate = Sprinkler.PostDate&#xA;&#xA;-----------------Update Deductible code----------------&#xA;--  FROM [asi1].[dbo].[PLCoveragePkg]&#xA;  --  where policyid = 'FAC1165' and CoverageDescr = 'building coverage' in order to get hurdeductible amount&#xA;  --gets messy if split by subline. don't always have hurrdeduct recorded&#xA;&#xA;UPDATE P &#xA;SET DEDUCTIBLEAMOUNT = CONVERT( VARCHAR,REPLICATE('0',5-LEN(CONVERT(INT,ROUND(NHRdeductible,0))))) + CONVERT(VARCHAR,CONVERT(INT,ROUND(NHRdeductible,0)))  &#xA;&#x9;,DEDUCTIBLECODE = CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN NHRdeductible = 0 THEN '01'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 1000 THEN '07'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 2500 THEN '08'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 5000 THEN '09'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 10000 THEN '10'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 25000 THEN '11'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN WP.NHRdeductible &lt;= 50000 THEN '12'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE '09'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; END&#xA;FROM ASIdev..ISOReporting_final_TX_Commercial_Premium P&#xA;JOIN ASIdev..ISOReporting_staging_TX_Commercial_Premium WP ON WP.PolicyID = P.PolicyID AND WP.IncDate = P.Incdate &#xA;JOIN (SELECT [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,sum(Limit) AS 'Coverage'&#xA;&#x9;&#x9;  ,CoverageDescr&#xA;&#x9;FROM [ASI1].[dbo].[PLCoveragePkg]&#xA;&#x9;WHERE CoverageDescr = 'Building Coverage'&#xA;&#x9;GROUP BY [PolicyID]&#xA;&#x9;&#x9;  ,[InceptionDate]&#xA;&#x9;&#x9;  ,PostDate&#xA;&#x9;&#x9;  ,CoverageDescr) Coverages ON WP.PolicyID = Coverages.PolicyID AND WP.IncDate = Coverages.Inceptiondate AND WP.PostDate = Coverages.PostDate&#xA;&#xA;----------------Update YEARCONSTRUCTION code----------------&#xA;UPDATE P  ---YearConstruction must be blank given specific conditions. Used E152 for below. &#xA;SET YEARCONSTRUCTION = '  '&#xA;FROM ASIdev..ISOReporting_final_TX_Commercial_Premium P&#xA;WHERE (SUBLINE = '011' OR SUBLINE = '027') &#xA;AND IncDate &lt; '5/1/2015'&#xA;AND GREENUPGRADEINDICATOR NOT IN ('8') &#xA;AND TYPEOFPOLICY NOT IN ('20', '2A', '80', '8A')&#xA;AND LEFT(ClassificationCode,1) NOT IN ('7', '8', '9')&#xA;AND COVERAGECODE NOT IN ('C', 'D', 'E', 'F')&#xA;AND CLASSIFICATIONCODE NOT IN ('1160', '1165', '1170', '1185', '1190', '1200', '0833')&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ReportDate1"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ReportDate2"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ReportDate3_ReserveMonth"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::LastDayOfQuarter"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="7"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load TX Commercial Data\SQL Truncate TX Commercial Loss table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d313aa42-60b2-4422-9f92-2bf7c38fde2d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Truncate TX Commercial Loss table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE ASIDev.dbo.ISOReporting_final_TX_Commercial_Losses" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SEQ - Load TX Commercial Data\SQL Truncate TX Commercial Premium tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b90aeb39-c77f-454e-8fd5-dfb41148e78d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="SQL Truncate TX Commercial Premium tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE ASIDev.dbo.ISOReporting_staging_TX_Commercial_Premium&#xA;GO&#xA;&#xA;TRUNCATE TABLE ASIDev.dbo.ISOReporting_final_TX_Commercial_Premium&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{A8350A59-808E-4D52-8B35-1F2774019125}"
          DTS:From="Package\SEQ - Load TX Commercial Data\SQL Truncate TX Commercial Premium tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Premium tables" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{3F5BC8FA-5C18-4E11-99F0-7BAA8AB81F7C}"
          DTS:From="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Premium tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{B3296CE5-5DD8-42A6-8541-A459E43B886C}"
          DTS:From="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\SEQ - Load TX Commercial Data\SQL Truncate TX Commercial Loss table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{E9EAF76B-6117-4DC1-8CEF-A760A65A897D}"
          DTS:From="Package\SEQ - Load TX Commercial Data\SQL Truncate TX Commercial Loss table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Loss table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{FD682253-57EB-430E-8362-1FEF1DCA54E7}"
          DTS:From="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Loss table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SQL Set Date Variables - MANUAL"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{21a57122-b253-4846-b740-384f562cef28}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="SQL Set Date Variables - MANUAL"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{66467500-4919-415A-BBC7-8E1FF4DABEF2}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="SELECT '1/1/2018' AS Month1, --month one of quarter&#xA; '2/1/2018' AS Month2, --month two of quarter&#xA; '3/1/2018' AS Month3, --month three of quarter&#xA; '3/31/2018' AS LastDay, --last day of quarter&#xA; '38' AS AcctDate --see notes below to create&#xA;&#xA; --------------------------------------------------&#xA; --Accounting Date (2 digits) - last month of the quarter being reported + last digit of year&#xA; --March 3&#xA; --June 6&#xA; --Sept 9&#xA; --Dec &amp;&#xA; --Second digit is last digit of the year ex. 64 means June 2014&#xA; --------------------------------------------------"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="Month1"
            SQLTask:DtsVariableName="User::ReportDate1" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="Month2"
            SQLTask:DtsVariableName="User::ReportDate2" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="Month3"
            SQLTask:DtsVariableName="User::ReportDate3_ReserveMonth" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="LastDay"
            SQLTask:DtsVariableName="User::LastDayOfQuarter" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="AcctDate"
            SQLTask:DtsVariableName="User::strAccountingDate" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{6B4FDF03-19FA-4EFD-9599-AEE57F5FFA02}"
      DTS:From="Package\SQL Set Date Variables - MANUAL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\SEQ - Load TX Commercial Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{54D41DB0-211E-4F70-80E2-88AC5CCDA18B}"
      DTS:From="Package\SQL Set Date Variables - MANUAL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\SEQ - Load NonTX Commercial Data" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="277,42"
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses"
          TopLeft="11.0000000000001,515.5" />
        <NodeLayout
          Size="288,42"
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="234,42"
          Id="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Loss table"
          TopLeft="32.5000000000001,413.5" />
        <NodeLayout
          Size="260,42"
          Id="Package\SEQ - Load NonTX Commercial Data\SQL Load Commercial Premium tables"
          TopLeft="19.5,107.5" />
        <NodeLayout
          Size="254,42"
          Id="Package\SEQ - Load NonTX Commercial Data\SQL Truncate Commercial Loss table"
          TopLeft="22.5000000000001,311.5" />
        <NodeLayout
          Size="279,42"
          Id="Package\SEQ - Load NonTX Commercial Data\SQL Truncate Commercial Premium tables"
          TopLeft="10,5.5" />
        <EdgeLayout
          Id="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint]"
          TopLeft="149.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 1]"
          TopLeft="149.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 2]"
          TopLeft="149.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 3]"
          TopLeft="149.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load NonTX Commercial Data.PrecedenceConstraints[Constraint 4]"
          TopLeft="149.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="299,613"
          Size="299,656"
          Id="Package\SEQ - Load NonTX Commercial Data"
          TopLeft="482.5,126.5" />
        <NodeLayout
          Size="283,42"
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss"
          TopLeft="16.0000000000001,515.5" />
        <NodeLayout
          Size="304,42"
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="250,42"
          Id="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Loss table"
          TopLeft="32.5000000000001,413.5" />
        <NodeLayout
          Size="276,42"
          Id="Package\SEQ - Load TX Commercial Data\SQL Load TX Commercial Premium tables"
          TopLeft="19.5,107.5" />
        <NodeLayout
          Size="269,42"
          Id="Package\SEQ - Load TX Commercial Data\SQL Truncate TX Commercial Loss table"
          TopLeft="23.0000000000001,311.5" />
        <NodeLayout
          Size="295,42"
          Id="Package\SEQ - Load TX Commercial Data\SQL Truncate TX Commercial Premium tables"
          TopLeft="10,5.5" />
        <EdgeLayout
          Id="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint]"
          TopLeft="157.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 1]"
          TopLeft="157.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 2]"
          TopLeft="157.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 3]"
          TopLeft="157.5,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SEQ - Load TX Commercial Data.PrecedenceConstraints[Constraint 4]"
          TopLeft="157.5,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="315,613"
          Size="315,656"
          Id="Package\SEQ - Load TX Commercial Data"
          TopLeft="63.5,128.5" />
        <NodeLayout
          Size="240,42"
          Id="Package\SQL Set Date Variables - MANUAL"
          TopLeft="275,24.4999999999998" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="356.333333333333,66.4999999999998">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-135.333333333333,62.0000000000002"
              Start="0,0"
              End="-135.333333333333,54.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.0463576158941" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.0463576158941"
                    Point2="0,25.0463576158941"
                    Point3="-4,25.0463576158941" />
                  <mssgle:LineSegment
                    End="-131.333333333333,25.0463576158941" />
                  <mssgle:CubicBezierSegment
                    Point1="-131.333333333333,25.0463576158941"
                    Point2="-135.333333333333,25.0463576158941"
                    Point3="-135.333333333333,29.0463576158941" />
                  <mssgle:LineSegment
                    End="-135.333333333333,54.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="433.666666666667,66.4999999999998">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="198.333333333333,60.0000000000002"
              Start="0,0"
              End="198.333333333333,52.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2384105960266" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2384105960266"
                    Point2="0,24.2384105960266"
                    Point3="4,24.2384105960266" />
                  <mssgle:LineSegment
                    End="194.333333333333,24.2384105960266" />
                  <mssgle:CubicBezierSegment
                    Point1="194.333333333333,24.2384105960266"
                    Point2="198.333333333333,24.2384105960266"
                    Point3="198.333333333333,28.2384105960266" />
                  <mssgle:LineSegment
                    End="198.333333333333,52.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="255,42"
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\DST_FF Comm 3424"
          TopLeft="44.5,107.5" />
        <EdgeLayout
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses.Paths[OLE DB Source Output]"
          TopLeft="133,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Losses\SRC_OLE ASIDev Commercial Losses">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="266,42"
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="202,42"
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\DST_FF Commercial 3424"
          TopLeft="37.5,107.5" />
        <EdgeLayout
          Id="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium.Paths[OLE DB Source Output]"
          TopLeft="138.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SEQ - Load NonTX Commercial Data\DFT Load DataCall for Commercial Permium\SRC_OLE ASIDev Commercial Premium">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="260,42"
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss"
          TopLeft="14,124" />
        <NodeLayout
          Size="218,42"
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\DST_FF TX Commercial 3424"
          TopLeft="371,107" />
        <EdgeLayout
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss.Paths[OLE DB Source Output]"
          TopLeft="274,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="97,-17"
              Start="0,0"
              End="89.5,-17">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="44.5,0"
                    Point2="48.5,0"
                    Point3="48.5,-4" />
                  <mssgle:LineSegment
                    End="48.5,-13" />
                  <mssgle:CubicBezierSegment
                    Point1="48.5,-13"
                    Point2="48.5,-17"
                    Point3="52.5,-17" />
                  <mssgle:LineSegment
                    End="89.5,-17" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Loss\SRC_OLE ASIDev TX Commercial Loss">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="281,42"
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium"
          TopLeft="5.5,6.5" />
        <NodeLayout
          Size="218,42"
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\DST_FF TX Commercial 3424"
          TopLeft="37,107.5" />
        <EdgeLayout
          Id="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium.Paths[OLE DB Source Output]"
          TopLeft="146,48.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SEQ - Load TX Commercial Data\DFT Load DataCall for TX Commercial Premium\SRC_OLE ASIDev TX Commercial Premium">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>